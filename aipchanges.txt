Aries Interop Profile: 1.0
>>>>>>>> Changed protocol: concepts/0003-protocols, latest commit to protocol: 89e5e73235299c5d32d4c7cbee28567672c82672

diff --git a/concepts/0003-protocols/README.md b/concepts/0003-protocols/README.md
index 1e5fc46..c833176 100644
--- a/concepts/0003-protocols/README.md
+++ b/concepts/0003-protocols/README.md
@@ -3,7 +3,7 @@
 - Authors: [Daniel Hardman](daniel.hardman@gmail.com)
 - Status: [ACCEPTED](/README.md#accepted)
 - Since: 2019-04-01
-- Status Note: standards track and beginning to influence many mental models, but not yet [ADOPTED](/README.md#rfc-lifecycle). 
+- Status Note: standards track and beginning to influence many mental models, but not yet [ADOPTED](/README.md#rfc-lifecycle).
 - Supersedes: [Indy PR #69]( https://github.com/hyperledger/indy-hipe/pull/69)
 - Start Date: 2018-12-28
 - Tags: [concept](/tags.md#concept)
@@ -16,7 +16,50 @@ and shows how they should be designed and documented.
 
 [![protocol](protocol.png)](https://docs.google.com/presentation/d/15UAkh_2WfDk7wlto7pSL7YU9NJr_XVMgGAOeNIRbzK8/edit#slide=id.p)
 
-
+## Table of Contents<!-- omit in toc -->
+
+- [Aries RFC 0003: Protocols](#aries-rfc-0003-protocols)
+  - [Summary](#summary)
+  - [Motivation](#motivation)
+  - [Tutorial](#tutorial)
+    - [What is a Protocol?](#what-is-a-protocol)
+    - [Relationship to APIs](#relationship-to-apis)
+    - [Decentralized](#decentralized)
+    - [Types of Protocols](#types-of-protocols)
+    - [Agent Design](#agent-design)
+    - [Composable](#composable)
+    - [Message Types](#message-types)
+      - [Handling Unrecognized Items in Messages](#handling-unrecognized-items-in-messages)
+    - [Ingredients](#ingredients)
+    - [How to Define a Protocol](#how-to-define-a-protocol)
+    - [Security Considerations](#security-considerations)
+      - [Replay Attacks](#replay-attacks)
+  - [Reference](#reference)
+    - [Message Type and Protocol Identifier URIs](#message-type-and-protocol-identifier-uris)
+      - [MTURI](#mturi)
+      - [PIURI](#piuri)
+    - [Semver Rules for Protocols](#semver-rules-for-protocols)
+      - [Semver Examples](#semver-examples)
+        - [Initiator](#initiator)
+        - [Recipient Rules](#recipient-rules)
+    - [State Details and State Machines](#state-details-and-state-machines)
+      - [State Machines](#state-machines)
+      - [Processing Points](#processing-points)
+    - [Roles, Participants, Parties, and Controllers](#roles-participants-parties-and-controllers)
+      - [Roles](#roles)
+      - [Participants](#participants)
+      - [Parties](#parties)
+      - [Controllers](#controllers)
+    - [Instructions for Protocol RFCs](#instructions-for-protocol-rfcs)
+  - [Drawbacks](#drawbacks)
+  - [Rationale and alternatives](#rationale-and-alternatives)
+  - [Prior art](#prior-art)
+    - [BPMN](#bpmn)
+    - [WSDL](#wsdl)
+    - [Swagger / OpenAPI](#swagger--openapi)
+    - [Other](#other)
+  - [Unresolved questions](#unresolved-questions)
+  - [Implementations](#implementations)
 
 ## Motivation
 
@@ -26,7 +69,7 @@ We also need to show how a protocol is defined, so the analog to defining a Swag
 
 ## Tutorial
 
-#### What is a protocol?
+### What is a Protocol?
 
 A __protocol__ is a recipe for a stateful interaction. Protocols are all
 around us, and are so ordinary that we take them for granted. Each of the
@@ -40,7 +83,7 @@ a sort of "recipe":
 * Going through security at the airport when we fly
 * Applying for a loan
 
-In the context of decentralized identity, protocols manifest at many different levels of the stack: at the lowest levels of networking, in cryptographic algorithms like Diffie Helman, in the management of DIDs, in the conventions of [DIDComm](../0005-didcomm/README.md), and in higher-level interactions that solve problems for people with only minimal interest in the technology they're using. However, this RFC focuses on the last of these layers, where use cases and personas are transformed into features with obvious social value like:
+In the context of decentralized identity, protocols manifest at many different levels of the stack: at the lowest levels of networking, in cryptographic algorithms like Diffie Hellman, in the management of DIDs, in the conventions of [DIDComm](../0005-didcomm/README.md), and in higher-level interactions that solve problems for people with only minimal interest in the technology they're using. However, this RFC focuses on the last of these layers, where use cases and personas are transformed into features with obvious social value like:
 
 * [Connecting with one another](../../features/0023-did-exchange/README.md)
 * [Requesting and issuing credentials](../../features/0036-issue-credential/README.md)
@@ -56,20 +99,20 @@ In the context of decentralized identity, protocols manifest at many different l
 * Reporting errors
 * Cooperative debugging
 
-When "protocol" is used in an Aries context without any qualifying adjective, it is referencing a recipe for a high-level interaction like these. Lower-level protocols are usually described more specifically and possibly with other verbiage: "cryptographic algorithms", "DID management procedures", "DIDComm conventions", "wire-level message exchange", "transports", and so forth. This helps us focus "protocol" on the place where application developers that consume Aries do most of the work that creates value.
+When "protocol" is used in an Aries context without any qualifying adjective, it is referencing a recipe for a high-level interaction like these. Lower-level protocols are usually described more specifically and possibly with other verbiage: "cryptographic algorithms", "DID management procedures", "DIDComm conventions", "transports", and so forth. This helps us focus "protocol" on the place where application developers that consume Aries do most of the work that creates value.
 
-#### Relationship to APIs
+### Relationship to APIs
 
 The familiar world of web APIs is a world of protocols, but it comes with constraints antithetical to decentralized identity:
 
 * It assumes all interactions are between a client and a server--either two parties, or N parties mediated by a central server. Thus, the server is a natural locus for surveillance and hacking.
-* It assumes security is assymetric--not using DIDs, but driven by certs on a server and by a session for the client.
+* It assumes security is asymmetric--not using DIDs, but driven by certs on a server and by a session for the client.
 * It assumes the transport is HTTP. This is problematic for pure mobile-to-mobile, or for use cases where the transport is complex or asymmetric.
 * Because the server can never initiate an interaction, it requires at least one party to be continuously online.
 
 Protocols impose none of these constraints. Web APIs can easily be modeled as protocols where the transport is HTTP and the payload is a message, and the Aries community actively does this. We are not opposed to APIs. We just want to describe and standardize the higher level abstraction so we don't have a web solution and a BlueTooth solution that are diverged for no good reason.
 
-#### Decentralized
+### Decentralized
 
 As used in the agent/DIDComm world, protocols are _decentralized_. This means
 there is not an overseer for the protocol, guaranteeing information flow,
@@ -77,40 +120,39 @@ enforcing behaviors, and ensuring a coherent view. It is a [subtle but
 important divergence from API-centric approaches](https://www.reactivemanifesto.org/glossary#Protocol), where a server holds
 state against which all other parties (clients) operate. Instead, all
 parties are peers, and they interact by mutual consent and with a (hopefully)
-shared understanding of the rules and goals. Protocols are like a dance--not one
+shared understanding of the rules and goals. Protocols are like a dance&mdash;not one
 that's choreographed or directed, but one where the parties make dynamic
 decisions and react to them.
 
 ![dance](dance.jpg)
 
-#### Types of Protocols
-
-The most common protocol style in DID Communication is __request-response__.
-This style involve two *parties*, with the `requester` making the first move,
-and the `responder` completing the interaction. The [Discover Features Protocol](
-../../features/0031-discover-features/README.md) uses this style.
-
-![request-response](request-response.png)
+### Types of Protocols
 
-A second common pattern that's also important is __notification__. This style also
+The simplest protocol style is __notification__. This style
 involves two parties, but it is one-way: the `notifier` emits a message,
-and the protocol ends when the `notified` receives it. The [ACK Protocol](
-../../features/0015-acks/README.md) and the [Report Problem
-Protocol](../../features/0035-report-problem/README.md) use this style.
+and the protocol ends when the `notified` receives it. The [basic message protocol](../../features/0095-basic-message/README.md) uses this style.
 
 ![notification](notification.png)
 
+Slightly more complex is the __request-response__ protocol style.
+This style involve two parties, with the `requester` making the first move,
+and the `responder` completing the interaction. The [Discover Features Protocol](
+../../features/0031-discover-features/README.md) uses this style. Note that
+with protocols as Aries models them (and unlike an HTTP request), the request-response messages are
+asynchronous.
+
+![request-response](request-response.png)
+
 However, more complex protocols exist. The [Introduce Protocol](
 ../../features/0028-introduce/README.md) involves three parties,
-not two. When the [DID Exchange Protocol](
-../../features/0023-did-exchange/README.md) includes organizations, it
-may involve dozens of *participants*, and it has cycles and other complex
-state evolution.
+not two. The [issue credential protocol](../../feature/../features/0036-issue-credential/README.md)
+includes up to six message types (including `ack` and `problem_report`), two of which (`proposal` and `offer`)
+can be used to interactively negotiate details of the elements of the subsequent messages in the protocol.
 
->See [this note](roles-participants-etc.md) for definitions of the terms
+>See [this subsection](#roles-participants-parties-and-controllers) for definitions of the terms
 "role", "participant", and "party".
 
-#### Agent Design
+### Agent Design
 
 Protocols are *the* key unit of interoperable extensibility in agents and agent-like things. To add a
 new interoperable feature to an agent, give it the ability to handle a
@@ -120,17 +162,17 @@ When agents receive messages, they map the messages to a __protocol handler__
 and possibly to an __interaction state__ that was previously persisted. This is the analog to routes, route handlers, and sessions in web APIs, and could actually be implemented as such if the transport for the protocol is HTTP. The
 protocol handler is code that knows the rules of a particular protocol; the
 interaction state tracks progress through an interaction. For more information,
-see the [agents explainer -- RFC 0004](../0004-agents/README.md#general-patterns)
-and the [DIDComm explainer -- RFC 0005](
-../0005-didcomm/README.md).
+see the [agents explainer&mdash;RFC 0004](../0004-agents/README.md#general-patterns)
+and the [DIDComm explainer&mdash;RFC 0005](../0005-didcomm/README.md).
 
-#### Composable
+### Composable
 
 Protocols are *composable*--meaning that you can build complex ones from simple ones.
 The protocol for asking someone to repeat their last sentence can be part of
-the protocol for ordering food at a restaurant. The protocols for
-reporting an error or arranging payment can be part of a protocol for
-issuing credentials.
+the protocol for ordering food at a restaurant. It's common to ask a potential
+driver's license holder to prove their street address before issuing the license.
+In protocol terms, this is nicely modeled as the [present proof](../../features/0037-present-proof/README.md)
+being invoked in the middle of an [issue credential](../../features/0036-issue-credential/README.md) protocol.
 
 When we run one protocol _inside_ another, we call the inner protocol a
 __subprotocol__, and the outer protocol a __superprotocol__. A given protocol
@@ -141,13 +183,15 @@ a superprotocol from another (as when protocols are nested at least 3 deep).
 ![super- and subprotocols](super-sub.png)
 
 Commonly, protocols wait for subprotocols to complete, and then they continue.
-A good example of this is [ACKs](../../features/0015-acks/README.md),
-which are often used as a discrete step in a larger flow.
+A good example of this is mentioned above&mdash;starting an issue credential flow,
+but requiring the potential issuer and/or the potential holder to prove something
+to one another before completing the process.
 
 In other cases, a protocol B is not "contained" inside protocol A.
 Rather, A triggers B, then continues in parallel,
-without waiting for B to complete. This __coprotocol__ relationship is analogous to relationship between [coroutines in computer science](https://en.wikipedia.org/wiki/Coroutine). In the [Introduce Protocol](
-../../features/0028-introduce/README.md),
+without waiting for B to complete. This __coprotocol__ relationship is analogous to
+relationship between [coroutines in computer science](https://en.wikipedia.org/wiki/Coroutine).
+In the [Introduce Protocol](../../features/0028-introduce/README.md),
 the final step is to begin a connection protocol between the two introducees--
 but [the introduction coprotocol completes when the connect coprotocol
 *starts*, not when it *completes*](
@@ -155,59 +199,395 @@ but [the introduction coprotocol completes when the connect coprotocol
 
 ![co-protocols](co-protocols.png)
 
-#### Message Families
+### Message Types
+
+A protocol includes a number of message types that enable the execution of an instance of a protocol.
+Collectively, the message types of a protocol become the skeleton of its _interface_. Most of the message
+types are defined with the protocol, but several key message types, notably [acks](../../features/0015-acks/README.md)
+and [problem reports](../../features/0035-report-problem/README.md) are defined in separate RFCs and `adopted` into
+a protocol. This ensures that the structure of such messages is standardized, but used in the context of the
+protocol adopting the message types.
 
-A message family is a collection of messages that share a common theme, goal, or
-usage pattern. The messages used by a protocol may be a subset of a particular
-message family; for example, the [DID Exchange Protocol](
-../../features/0023-did-exchange/README.md)
-uses one subset of the messages in the
-`connections` message family, and the [sync connection protocol](
-../../features/0030-sync-connection/README.md)
-uses a different subset.
+#### Handling Unrecognized Items in Messages
 
-Collectively, the message types of a protocol become the skeleton of its _interface_. Each protocol
-has a primary message family, and the name of the protocol is often the name of the
-primary message family.
+In the [semver](#semver-rules-for-protocols) section of this document there is discussion of the handling of mismatches in minor versions
+supported and received. Notably, a recipient that supports a given minor version of a protocol less than that of a
+received protocol message should ignore any unrecognized fields in the message. Such handling of unrecognized data items applies more generally than
+just minor version mismatches. A recipient of a message from a supported major version of a protocol should ignore **any** unrecognized items
+in a received message, even if the supported and minor versions are the same. When items from the message are ignored, the recipient may want
+to send a warning `problem-report` message with code `fields-ignored`.
 
-#### Ingredients
+### Ingredients
 
 A protocol has the following ingredients:
 
-* [_Name_](template.md#name-and-version-under-tutorial) and [semver-compatible
-  version](semver.md)
-* [_URI_ that uniquely identifies it](uris.md)
-* [_Messages (primary message family)_](template.md#messages-under-tutorial)
-* [_Adopted messages_](template.md#adopted-messages)
-* [_Roles_](template.md#roles-under-tutorial)
-* [_State_ and _sequencing rules_](template.md#states-under-tutorial)
+* [_Name_](../../0000-template-protocol.md#name-and-version) and [semver-compatible
+  version](#semver-rules-for-protocols)
+* [_URI_ that uniquely identifies it](#message-type-and-protocol-identifier-uris)
+* [_Messages (primary message family)_](../../0000-template-protocol.md#messages)
+* [_Adopted messages_](../../0000-template-protocol.md#adopted-messages)
+* [_Roles_](../../0000-template-protocol.md#roles)
+* [_State_ and _sequencing rules_](../../0000-template-protocol.md#states)
 * _Events that can change state_ -- notably, _messages_, but also _errors_,
 _timeouts_, and other things
 * _Constraints that provide trust and incentives_
 
-
-#### How to define a protocol or message family
+### How to Define a Protocol
 
 To define a protocol, write an RFC. Specific instructions for
 protocol RFCs, and a discussion about the theory behind detailed
-protocol concepts, are given in the [Template for Protocol RFCs](
-template.md). The [tictactoe protocol](tictactoe/README.md) is
-also attached to this RFC as an example.
+protocol concepts, are given in the [instructions for protocol RFCs](#instructions-for-protocol-rfcs)
+and in the [protocol RFC template](../../0000-template-protocol.md).
+
+The [tictactoe protocol](tictactoe/README.md) is attached to this RFC as an example.
 
 [![tictactoe protocol](tictactoe/tile.png)](tictactoe/README.md)
 
-#### Security Considerations
+### Security Considerations
 
-##### Replay attacks
+#### Replay Attacks
 
-It should be noted that when defining a protocol that has domain specific requirements around preventing replay attacks an `@id` property SHOULD be required. Given the `@id` field is most commonly set to be a UUID, it usually provides sufficient randomness that a nonce would in preventing replay attacks. This means that sufficient care will be needed in processing of the `@id` field however, to make sure the `@id` field hasn't been used before. In some cases, nonces require being unpredictable as well. In this case, greater review should be taken as to how the `@id` field should be used in the domain specific protocol. Additionally, in the event where the `@id` field is not adequate, it's recommended that an additional `nonce` field be required by the domain specific protocol specification.
+It should be noted that when defining a protocol that has domain specific requirements around preventing replay attacks, an `@id` property SHOULD be required. Given an `@id` field is most commonly set to be a UUID, it should provide randomness comparable to that of a nonce in preventing replay attacks. However, this means that care will be needed in processing of the `@id` field to make sure its value has not been used before. In some cases, nonces require being unpredictable as well. In this case, greater review should be taken as to how the `@id` field should be used in the domain specific protocol. In the event where the `@id` field is not adequate for preventing replay attacks, it's recommended that an additional `nonce` field be required by the domain specific protocol specification.
 
 ## Reference
 
-* [Message Type and Protocol Identifier URIs](uris.md)
-* [Semver Rules for Protocols](semver.md)
-* [State Details and State Machines](state-details.md)
-* [Roles, Participants, Parties, and Controllers](roles-participants-etc.md)
+### Message Type and Protocol Identifier URIs
+
+Message types and protocols are identified with URIs that match certain
+conventions.
+
+#### MTURI
+
+A __message type URI__ (MTURI) identifies message types unambiguously.
+Standardizing its format is important because it is parsed by agents that
+will map messages to handlers--basically, code will look at this string and
+say, "Do I have something that can handle this message type inside protocol
+*X* version *Y*?"
+
+When this analysis happens, strings should be compared for byte-wise equality
+in all segments except version. This means that case, unicode normalization,
+and punctuation differences all matter. It is thus best practice to avoid
+protocol and message names that differ only in subtle, easy-to-mistake ways.
+
+Comparison of the version segment of an MTURI or PIURI should follow semver
+rules and is discussed in the [semver section](#semver-rules-for-protocols) of this document.
+
+The URI MUST be composed as follows:
+
+![MTURI structure](mturi-structure.png)
+
+```ABNF
+message-type-uri  = doc-uri delim protocol-name
+    "/" protocol-version "/" message-type-name
+delim             = "?" / "/" / "&" / ":" / ";" / "="
+protocol-name     = identifier
+protocol-version  = semver
+message-type-name = identifier
+identifier        = alpha *(*(alphanum / "_" / "-" / ".") alphanum)
+```
+
+It can be loosely matched and parsed with the following regex:
+
+```regex
+    (.*?)([a-z0-9._-]+)/(\d[^/]*)/([a-z0-9._-]+)$
+```
+
+A match will have captures groups of (1) = `doc-uri`, (2) = `protocol-name`,
+(3) = `protocol-version`, and (4) = `message-type-name`.
+
+The goals of this URI are, in descending priority:
+
+* Code can use the URI to route messages to protocol
+handlers using [semver rules](#semver-rules-for-protocols).
+
+* The definition of a protocol should be tied to the URI such
+that it is semantically stable. This means that once version 1.0
+of a protocol is defined, its definition [should not change in ways that would break implementations](#semver-rules-for-protocols).
+
+* Developers can discover information about novel protocols, using
+the URI to browse or search the web.
+
+The `doc-uri` portion is any URI that exposes documentation about
+protocols. A developer should be able to browse to that URI and use human intelligence
+to look up the named and versioned protocol. Optionally and preferably, the
+full URI may produce a page of documentation about the specific message type,
+with no human mediation involved.
+
+#### PIURI
+
+A shorter URI that follows the same conventions but lacks the
+`message-type-name` portion is called a __protocol identifier URI__
+(PIURI).
+
+![PIURI structure](piuri-structure.png)
+
+```ABNF
+protocol-identifier-uri  = doc-uri delim protocol-name
+    "/" semver
+```
+
+Its loose matcher regex is:
+
+```regex
+    (.*?)([a-z0-9._-]+)/(\d[^/]*)/?$
+```
+
+The following are examples of valid MTURIs and PIURIs:
+
+* `http://example.com/protocols?which=lets_do_lunch/1.0/` (PIURI with fully automated lookup of protocol docs)
+* `http://example.com/message_types?which=lets_do_lunch/1.0/proposal` (MTURI)
+* `https://github.com/hyperledger/aries-rfcs/tree/18c4f82:trust_ping/1.0/ping`
+   (MTURI). Note that this URI returns a 404 error if followed directly--but
+   per rules described above, the developer should browse to the doc root
+   ([https://github.com/hyperledger/aries-rfcs/tree/18c4f82](
+   https://github.com/hyperledger/aries-rfcs/tree/18c4f82
+   )) and look for documentation on the `trust_ping/1.0` protocol.
+* `https://didcomm.org/trust_ping/1.0/ping` (MTURI) This
+   uses an https reference that could serve
+   information about protocols.
+
+### Semver Rules for Protocols
+
+[Semver](https://semver.org) rules apply to protocols, with the version of a protocol is expressed
+in the `semver` portion of its [identifying URI](#message-type-and-protocol-identifier-uris).
+The ["ingredients"](#ingredients) of a protocol combine to form a
+[public API in the semver sense](https://semver.org/#spec-item-1). Core Aries protocols
+specify only major and minor elements in a version; the patch component is not used. Non-core
+protocols may choose to use the patch element.
+
+The major and minor versions of protocols match semver semantics:
+
+- Clarification updates that do not change the "public API" of the protocol can be made
+with community support _without_ changing the minor version of the protocol.
+- An individual message type can add new optional fields, or deprecate
+existing fields, [with only a change to its protocol's minor
+version](https://semver.org/#spec-item-7). Similarly, a protocol can
+add new or deprecate message types with only a change to the minor version.
+- Changes that remove fields or message types, that make formerly optional
+things required, or that alter the state machine in incompatible
+ways, must result in an [increase of the major version of the protocol/primary
+message family](https://semver.org/#spec-item-8).
+
+Within a given major version of a protocol, an agent should:
+
+- respond to a minimum supported minor version, defaulting to "0"
+- respond with or initiate a protocol instance the current fully supported minor version
+
+This leads to the following received message handling rules:
+
+- message types received with a minor versions below the minimum may be answered with a `problem-report` message with code `version-not-supported`
+- message types received with a minor version at or higher than the minimum supported and less than the current minor version are processed, ideally with a response using the same minor version of the received message
+  - The recipient may want to send a warning `problem-report` message with code `version-with-degraded-features`
+- message types received with a minor version higher than the current minor version are processed with any unrecognized fields ignored
+  - The recipient may want to send a warning `problem-report` message with code `fields-ignored-due-to-version-mismatch`
+
+As documented in the semver documentation, these requirements are not applied when
+major version 0 is used. In that case, minor version increments are considered breaking.
+
+Agents may support multiple major versions and select which major version to
+use when initiating an instance of the protocol.
+
+An agent should reject messages from protocols or unsupported protocol major versions with
+a `problem-report` message with code `version-not-supported`. Agents that receive such a
+`problem-report` message may use the [discover features protocol](../../features/0031-discover-features/README.md)
+to resolve the mismatch.
+
+#### Semver Examples
+
+##### Initiator
+
+Unless Alice's agent (the initiator of a protocol) knows from prior history
+that it should do something different, it should begin a protocol using the
+highest version number that it supports. For example, if A.1
+supports versions 2.0 through 2.2 of protocol X, it should use 2.2 as the
+version in the message type of its first message.
+
+##### Recipient Rules
+
+Agents for Bob (the recipient) should reject messages from protocols with major
+versions different from those they support. For major version 0, they should also
+reject protocols with minor versions they don't support, since semver stipulates
+that [features are not stable before 1.0](https://semver.org/#spec-item-4). For
+example, if B.1 supports only versions 2.0 and 2.1 of protocol X, it should reject
+any messages from version 3 or version 1 or 0. In most cases, rejecting a message
+means sending a `problem-report` that the message is unsupported. The `code` field
+in such messages should be `version-not-supported`. Agents that receive such a
+`problem-report` can then use the [Discover Features Protocol](
+../../features/0031-discover-features/README.md) to resolve version problems.
+
+Recipient agents should accept messages that differ from their own supported version
+of a protocol only in the patch, prerelease, and/or build fields, whether these
+differences make the message earlier or later than the version the recipient prefers.
+These messages will be robustly compatible.
+
+For major version >= 1, recipients should also accept messages that differ only in that
+the message's minor version is earlier than their own preference. In such a case, the
+recipient should degrade gracefully to use the earlier version of the protocol. If the
+earlier version lacks important features, the recipient may optionally choose to send,
+in addition to a response, a `problem-report` with code `version-with-degraded-features`.
+
+If a recipient supports protocol X version 1.0, it should tentatively
+accept messages with later minor versions (e.g., 1.2). Message types that
+differ in only in minor version are guaranteed to be compatible *for the
+feature set of the earlier version*. That is, a 1.0-capable agent can support
+1.0 features using a 1.2 message, though of course it will lose any features
+that 1.2 added. Thus, accepting such a message could have two possible outcomes:
+
+1. The message at version 1.2 might look and behave exactly like it did at version
+1.0, in which case the message will process without any trouble.
+
+2. The message might contain some fields that are unrecognized and need to be ignored.
+
+In case 2, it is best practice for the recipient to send a `problem-report` that
+is a *warning*, not an *error*, announcing that some fields could not be processed
+(code = `fields-ignored-due-to-version-mismatch`). Such a message is *in addition
+to* any response that the protocol demands of the recipient.
+
+If the recipient of a protocol's initial message generates a response, the response
+should use the latest major.minor protocol version that both parties support and
+know about. Generally, all messages after the first use only major.minor
+
+[![version negotiation matrix](version-negotiation-matrix.png)](
+https://docs.google.com/spreadsheets/d/1W5KYOqCCqmTeU4Z7XZQH9_6_0TeP5Vf5TtsOZmioyB0/edit#gid=0)
+
+### State Details and State Machines
+
+While some protocols have only one sequence of states to manage, in most
+different roles perceive the interaction differently. The sequence of states
+for each role needs to be described with care in the RFC.
+
+#### State Machines
+
+By convention, protocol state and sequence rules are described using the
+concept of state machines, and we encourage developers who implement
+protocols to build them that way.
+
+Among other benefits, this helps with error handling: when one agent
+sends a [`problem-report` message](../../features/0035-report-problem/README.md)
+to another, the message can make it crystal clear which state it
+has fallen back to as a result of the error.
+
+Many developers will have encountered a formal of definition of state machines as
+they wrote parsers or worked on other highly demanding tasks, and may worry
+that state machines are heavy and intimidating. But as they are used in
+Aries protocols, state machines are straightforward and elegant. They
+cleanly encapsulate logic that would otherwise be a bunch of conditionals
+scattered throughout agent code. The [tictactoe example protocol](tictactoe/README.md)
+example includes a complete state machine in less than 50
+lines of [python code](tictactoe/state_machine.py), with [tests](tictactoe/test_state_machine.py).
+
+For an extended discussion of how state machines can be used, including in nested
+protocols, and with hooks that let custom processing happen at each point in
+a flow, see [https://github.com/dhh1128/distributed-state-machine](
+https://github.com/dhh1128/distributed-state-machine/blob/master/README.md).
+
+#### Processing Points
+
+A protocol definition describes key points in the flow where business logic
+can attach. Some of these __processing points__ are obvious, because the
+protocol makes calls for decisions to be made. Others are implicit. Some examples
+include:
+
+* The _beginning_ and _end_.
+* The _launch of a subprotocol_.
+* The _completion of a subprotocol_, or the _subprotocol changing state_.
+* _Sending a message_. (For each send, the sender could choose to go silent
+and abandon the interaction instead, though many
+protocols would ask for notification to be emitted as best practice.)
+* (Receiving a message_. (Requires validation, then integration
+with policy and processes internal to the agent and its sovereign domain,
+to move the interaction forward.)
+
+### Roles, Participants, Parties, and Controllers
+
+#### Roles
+
+The __roles__ in a protocol are the perspectives (responsibilities, privileges) that parties take i an
+interaction.
+
+This perspective is manifested in three general ways:
+
+* by the expectations that a party takes on in a protocol (ex. a role may be expected to do something to start a protocol).
+* by the messages that a party can and does use in the course of the protocol (some messages may be reserved for a single role, while other may used by some if not all roles).
+* by the state and the transition rules
+
+Like parties, roles are normally known at the start of the protocol but this is not a requirement.
+
+In an auction protocol, there are only two roles&mdash;_auctioneer_ and _bidder_&mdash;even though there may be many parties involved.
+
+#### Participants
+
+The __participants__ in a protocol are the agents that send and/or receive
+[plaintext application-level messages](../../concepts/../features/0044-didcomm-file-and-mime-types/README.md)
+that embody the protocol's interaction. Alice, Bob, and
+Carol may each have a cloud agent, a laptop, and a phone; if they engage in an
+introduction protocol using phones, then the agents on their phones are the participants.
+If the phones talk directly over Bluetooth, this is particularly clear--but even if the
+phones leverage push notifications and HTTP such that cloud agents help with routing,
+only the phone agents are participants, because only they maintain state for the
+interaction underway. (The cloud agents would be __facilitators__, and the laptops would
+be __bystanders__). When a protocol is complete, the participant agents know about the
+outcome; they may need to synchronize or replicate their state before other agents of the
+parties are aware.
+
+#### Parties
+
+The __parties__ to a protocol are the entities directly responsible for achieving the protocol's goals.
+When a protocol is high-level, parties are typically people or organizations; as protocols become lower-level,
+parties may be specific agents tasked with detail work through delegation.
+
+Imagine a situation where Alice wants a vacation. She engages with a travel agent named Bob. Together, they
+begin an "arrange a vacation" protocol. Alice is responsible for expressing her parameters and proving her willingness to
+pay; Bob is responsible for running a bunch of subprotocols to work out the details. Alice and Bob--not software
+agents they use--are parties to this high-level protocol, since they share responsibility for its goals.
+
+As soon as Alice has provided enough direction and hangs up the phone, Bob begins a sub-protocol with a hotel to book
+a room for Alice. This sub-protocol has related but different goals--it is about booking a particular hotel room, not
+about the vacation as a whole. We can see the difference when we consider that Bob could abandon the booking and choose
+a different hotel entirely, without affecting the overarching "arrange a vacation" protocol.
+
+With the change in goal, the parties have now changed, too. Bob and a hotel concierge are the ones responsible
+for making the "book a hotel room" protocol progress. Alice is an approver and indirect stakeholder, but she is
+not doing the work. (In [RACI terms](https://en.wikipedia.org/wiki/Responsibility_assignment_matrix),
+Alice is an "accountable" or "approving" entity, but only Bob and the concierge are "responsible" parties.)
+
+Now, as part of the hotel reservation, Bob tells the concierge that the guest would like access to a waverunner
+to play in the ocean on day 2. The concierge engages in a sub-sub-protocol to reserve the waverunner. The
+goal of this sub-sub-protocol is to reserve the equipment, not to book a hotel or arrange a vacation. The parties to this
+sub-sub-protocol are the concierge and the person or automated system that manages waverunners.
+
+Often, parties are known at the start of a protocol; however, that is not a requirement. Some protocols might commence
+with some parties not yet known or assigned.
+
+For many protocols, there are only two parties, and they are in a pairwise relationship. Other protocols
+are more complex. Introductions involves three; an auction may involve many.
+
+Normally, the parties that are involved in a protocol also participate in the interaction but this is not always the
+case. Consider a gossip protocol, two parties may be talking about a third party. In this case, the third party would
+not even know that the protocol was happening and would definitely not participate.
+
+#### Controllers
+
+The __controllers__ in a protocol are entities that make decisions. They may or may not be direct parties.
+
+Imagine a remote chess game between Bob and Carol, conducted with software agents. The chess protocol isn't
+technically about _how to select a wise chess move_; it's about _communicating the moves_ so parties achieve
+the shared goal of running a game to completion. Yet choices about moves are clearly made as the protocol
+unfolds. These choices are made by controllers--Bob and Carol--while the agents responsible for the work of
+moving the game forward wait with the protocol suspended.
+
+In this case, Bob and Carol could be analyzed as parties to the protocol, as well as controllers. But in other
+cases, the concepts are distinct. For example, in a protocol to issue credentials, the issuing institution
+might use an AI and/or business automation as a controller.
+
+### Instructions for Protocol RFCs
+
+A protocol RFC conforms to general RFC patterns, but includes some specific substructure.
+
+[![template sections](template-sections.png)](
+https://docs.google.com/presentation/d/15UAkh_2WfDk7wlto7pSL7YU9NJr_XVMgGAOeNIRbzK8/edit#slide=id.g5609c67f13_0_113)
+
+Please see the [special protocol RFC template](../../0000-template-protocol.md) for details.
 
 ## Drawbacks
 
@@ -217,8 +597,8 @@ of a protocol author than the familiar world of RESTful [Swagger/OpenAPI](
 https://swagger.io/docs/specification/about/).
 
 The extra complexity is justified by the greater demands that agent-to-agent
-communications place on the protocol definition. (See notes in [Prior Art](#prior-art)
-section for details.)
+communications place on the protocol definition. See notes in [Prior Art](#swagger--openapi)
+section for details.
 
 ## Rationale and alternatives
 
@@ -229,13 +609,13 @@ interop.
 
 ## Prior art
 
-#### BPMN
+### BPMN
 
 [BPMN](https://en.wikipedia.org/wiki/Business_Process_Model_and_Notation) (Business Process Model and Notation) is a
 graphical language for modeling flows of all types (plus things less like
 our protocols as well). BPMN is a mature standard sponsored by [OMG](
 https://en.wikipedia.org/wiki/Object_Management_Group)(Object Management Group). It has a nice
-[tool ecosystem](https://camunda.com/bpmn/tool/). It also has an XML file
+tool ecosystem (such as [this](https://camunda.com/bpmn/tool/)). It also has an XML file
 format, so the visual diagrams have a two-way transformation to and from
 formal written language. And it has a code generation mode, where BPMN
 can be used to drive executable behavior if diagrams are sufficiently
@@ -255,13 +635,13 @@ company.
 BPMN 2.0 introduced the notion of a [choreography](
 https://www.visual-paradigm.com/guide/bpmn/bpmn-orchestration-vs-choreography-vs-collaboration/#bpmn-choreography),
 which is much closer to the concept of an A2A protocol, and which has quite
-an elegent and intuitive visual representation. However, even a BPMN
+an elegant and intuitive visual representation. However, even a BPMN
 choreography doesn't have a way to discuss interactions with decorators,
 adoption of generic messages, and other A2A-specific concerns. Thus, we may
 lean on BPMN for some diagramming tasks, but it is not a substitute for the
 RFC definition procedure described here.
 
-#### WSDL
+### WSDL
 
 [WSDL](https://www.w3.org/TR/2001/NOTE-wsdl-20010315) (Web Services Description Language) is a web-centric
 evolution of earlier, RPC-style interface definition languages like
@@ -274,10 +654,10 @@ present, as being too heavy, [too fragile](
 https://codecraft.co/2008/07/29/decoupling-interfaces-as-versions-evolve-part-1/),
 or poorly supported by current tools.
 
-#### Swagger / OpenAPI
+### Swagger / OpenAPI
 
 [Swagger / OpenAPI](https://swagger.io/docs/specification/about/) overlaps
- about 60% with the concerns of protocol definition in agent-to-agent
+with some of the concerns of protocol definition in agent-to-agent
  interactions. We like the tools and the convenience of the paradigm
  offered by OpenAPI, but where these two do not overlap, we have impedance.
 
@@ -297,7 +677,7 @@ or poorly supported by current tools.
  Agent-to-agent protocols are nestable, while
  RESTful web services don't provide any special support for that construct.
 
-#### Other
+### Other
 
 * [Pdef (Protocol Definition Language)](https://github.com/pdef/pdef): An alternative to Swagger.
 * [JSON RPC](https://www.jsonrpc.org/specification): Defines how invocation of
@@ -309,12 +689,11 @@ or poorly supported by current tools.
  than OpenAPI. However, it is C++ only, and intended for use within browser
  plugins.
 
-# Unresolved questions
+## Unresolved questions
 
 - Should we write a Swagger translator?
 - If not swagger, what formal definition format should we use in the future?
 
-
 ## Implementations
 
 The following lists the implementations (if any) of this RFC. Please do a pull request to add your implementation. If the implementation is open source, include a link to the repo or to the implementation within the repo. Please be consistent in the "Name" field so that a mechanical processing of the RFCs can generate a list of all RFCs supported by an Aries implementation.
@@ -330,3 +709,4 @@ Name / Link | Implementation Notes
 [Connect.Me](https://www.evernym.com/blog/connect-me-sovrin-digital-wallet/) | mature but proprietary protocols; community protocols in process
 [Verity](https://www.evernym.com/products/) | mature but proprietary protocols; community protocols in process
 [Aries Protocol Test Suite](https://github.com/hyperledger/aries-protocol-test-suite) | 2 or 3 core protocols; active work to implement all that are ACCEPTED, since this tests conformance of other agents
+[Pico Labs](http://picolabs.io/) | [implemented](https://github.com/Picolab/G2S) protocols: connections, trust_ping, basicmessage, routing
diff --git a/concepts/0003-protocols/adoption.png b/concepts/0003-protocols/adoption.png
index d1e67c5..34b0ffc 100644
Binary files a/concepts/0003-protocols/adoption.png and b/concepts/0003-protocols/adoption.png differ
diff --git a/concepts/0003-protocols/roles-participants-etc.md b/concepts/0003-protocols/roles-participants-etc.md
index e8c56e4..bccdc09 100644
--- a/concepts/0003-protocols/roles-participants-etc.md
+++ b/concepts/0003-protocols/roles-participants-etc.md
@@ -1,26 +1,24 @@
-# Roles, Participants, Parties, and Controllers
+### Roles, Participants, Parties, and Controllers
 
-## Roles
+#### Roles
 
-The __roles__ in a protocol are the perspectives (responsibilities, privileges) that parties take on an
-interaction. 
+The __roles__ in a protocol are the perspectives (responsibilities, privileges) that parties take i an
+interaction.
 
 This perspective is manifested in three general ways:
 
  * by the expectations that a party takes on in a protocol (ex. a role may be expected to do something to start a protocol).
  * by the messages that a party can and does use in the course of the protocol (some messages may be reserved for a single role, while other may used by some if not all roles).
  * by the state and the transition rules
- 
+
 Like parties, roles are normally known at the start of the protocol but this is not a requirement.
 
-In an auction protocol, there are only two roles--*auctioneer*
-and *bidder*--even though there may be many parties involved.
+In an auction protocol, there are only two roles&mdash;_auctioneer_ and _bidder_&mdash;even though there may be many parties involved.
 
-## Participants
+#### Participants
 
-The __participants__ in a protocol are the agents that consume and/or emit
-[plaintext application-level messages](
-https://github.com/hyperledger/indy-hipe/tree/master/text/0026-agent-file-format#agent-plaintext-messages-ap)
+The __participants__ in a protocol are the agents that send and/or receive
+[plaintext application-level messages](../../concepts/../features/0044-didcomm-file-and-mime-types/README.md)
 that embody the protocol's interaction. Alice, Bob, and
 Carol may each have a cloud agent, a laptop, and a phone; if they engage in an
 introduction protocol using phones, then the agents on their phones are the participants.
@@ -32,7 +30,7 @@ be __bystanders__). When a protocol is complete, the participant agents know abo
 outcome; they may need to synchronize or replicate their state before other agents of the
 parties are aware.
 
-## Parties
+#### Parties
 
 The __parties__ to a protocol are the entities directly responsible for achieving the protocol's goals.
 When a protocol is high-level, parties are typically people or organizations; as protocols become lower-level,
@@ -68,7 +66,7 @@ Normally, the parties that are involved in a protocol also participate in the in
 case. Consider a gossip protocol, two parties may be talking about a third party. In this case, the third party would
 not even know that the protocol was happening and would definitely not participate.
 
-## Controllers
+#### Controllers
 
 The __controllers__ in a protocol are entities that make decisions. They may or may not be direct parties.
 
@@ -80,4 +78,4 @@ moving the game forward wait with the protocol suspended.
 
 In this case, Bob and Carol could be analyzed as parties to the protocol, as well as controllers. But in other
 cases, the concepts are distinct. For example, in a protocol to issue credentials, the issuing institution
-might use an AI and/or business automation as a controller.
\ No newline at end of file
+might use an AI and/or business automation as a controller.
diff --git a/concepts/0003-protocols/semver.md b/concepts/0003-protocols/semver.md
deleted file mode 100644
index 9902bf2..0000000
--- a/concepts/0003-protocols/semver.md
+++ /dev/null
@@ -1,93 +0,0 @@
-# Semver Rules for Protocols
-
-[Semver](https://semver.org) rules apply in cascading fashion to versions
-of protocols and individual message types. The version of a message type
-or protocol is expressed in the `semver` portion of its [identifying URI](
-uris.md).
-
-Individual message types are versioned as part of a coherent protocol, which
-constitutes a [public API in the semver sense](https://semver.org/#spec-item-1).
-An individual message type can add new optional fields, or deprecate
-existing fields, [with only a change to its protocol's minor
-version](https://semver.org/#spec-item-7).
-Similarly, a protocol can add new message types (or [adopted
-ones](template.md#adopted-messages)) with only a change
-to the minor version. It can announce deprecated fields. It can add additional
-semantics around optional decorators. These are all backwards-compatible
-changes, also requiring only a minor version update.
-
-Changes that remove fields or message types, that make formerly optional
-things required, or that alter the state machine in incompatible
-ways, must result in an [increase of the major version of the protocol/primary
-message family](https://semver.org/#spec-item-8).
-
-Because protocol handling choices depend mainly on major and minor version
-numbers, protocol versions are often simplified to major.minor. However,
-more complex versions do have defined behavior, and should be handled
-correctly by agents.
-
-### Version Negotiation
-
-The semver portion of a [message type or protocol identifier URI](uris.md) is
-used to establish the version of a protocol that parties use during an
-interaction.
-
-#### Initiator
-
-Unless Alice's agent (the initiator of a protocol) knows from prior history
-that it should do something different, it should begin a protocol using the
-highest version number that it supports. For example, if A.1
-supports versions 2.0 through 2.2 of protocol X, it should use 2.2 as the
-version in the message type of its first message.
-
-#### Recipient Rules
-
-Agents for Bob (the recipient) should reject messages from protocols with major
-versions different from those they support. For major version 0, they should also
-reject protocols with minor versions they don't support, since semver stipulates
-that [features are not stable before 1.0](https://semver.org/#spec-item-4). For
-example, if B.1 supports only versions 2.0 and 2.1 of protocol X, it should reject
-any messages from version 3 or version 1 or 0. In most cases, rejecting a message
-means sending a `problem-report` that the message is unsupported. The `code` field
-in such messages should be `version-not-supported`. Agents that receive such a
-`problem-report` can then use the [Discover Features Protocol](
-../../features/0031-discover-features/README.md) to resolve version problems.
-
-Recipient agents should accept messages that differ from their own supported version
-of a protocol only in the patch, prerelease, and/or build fields, whether these
-differences make the message earlier or later than the version the recipient prefers.
-These messages will be robustly compatible.
-
-For major version >= 1, recipients should also accept messages that differ only in that
-the message's minor version is earlier than their own preference. In such a case, the
-recipient should degrade gracefully to use the earlier version of the protocol. If the
-earlier version lacks important features, the recipient may optionally choose to send,
-in addition to a response, a `problem-report` with code `version-with-degraded-features`.
-
-If a recipient supports protocol X version 1.0, it should tentatively
-accept messages with later minor versions (e.g., 1.2). Message types that
-differ in only in minor version are guaranteed to be compatible *for the
-feature set of the earlier version*. That is, a 1.0-capable agent can support
-1.0 features using a 1.2 message, though of course it will lose any features
-that 1.2 added. Thus, accepting such a message could have two possible outcomes:
-
-1. The message at version 1.2 might look and behave exactly like it did at version
-1.0, in which case the message will process without any trouble.
-
-2. The message might contain some fields that are unrecognized and need to be ignored.
-
-In case 2, it is best practice for the recipient to send a `problem-report` that
-is a *warning*, not an *error*, announcing that some fields could not be processed
-(code = `fields-ignored-due-to-version-mismatch`). Such a message is *in addition
-to* any response that the protocol demands of the recipient.
-
-If the recipient of a protocol's initial message generates a response, the response
-should use the latest major.minor protocol version that both parties support and
-know about. Generally, all messages after the first use only major.minor
-
-[![version negotiation matrix](version-negotiation-matrix.png)](
-https://docs.google.com/spreadsheets/d/1W5KYOqCCqmTeU4Z7XZQH9_6_0TeP5Vf5TtsOZmioyB0/edit#gid=0)
-
-
-
- 
diff --git a/concepts/0003-protocols/state-details.md b/concepts/0003-protocols/state-details.md
deleted file mode 100644
index 53104e6..0000000
--- a/concepts/0003-protocols/state-details.md
+++ /dev/null
@@ -1,107 +0,0 @@
-# State Details and State Machines
-
-Some protocols have only one sequence of states to manage. But in many
-protocols, different roles perceive the interaction differently. Each
-perspective needs to be described with care. This rigor has been neglected
-in many early efforts at protocol definition, and its omission is a big
-miss. Analyzing all possible states and events for all roles leads to
-robustness; skipping the analysis leads to fragility.
-
-### State machines
-
-By convention, our community describes state and sequence rules using the
-concept of state machines, and we encourage developers who implement
-protocols to build them that way.
-
-Among other benefits, this helps with error handling: when one agent
-sends a [`problem-report`](../../features/0035-report-problem/README.md)
-message to another, the message can make it crystal clear which state it
-has fallen back to as a result of the error.
-
-Many developers will have encountered a formal definition of this concept as
-they wrote parsers or worked on other highly demanding tasks, and may worry
-that state machines are heavy and intimidating. But as they are used in
-DIDComm protocols, state machines are straightforward and elegant. They
-cleanly encapsulate logic that would otherwise be a bunch of conditionals
-scattered throughout agent code. Without a state machine:
-
-```python
-if received_message.type == X and state == Y:
-    do_something()
-...
-if received_message.type == X and state in [Y, Z]:
-    do_something_else()
-    state = V
-...
-if event == A and state in [V, W, Z]:
-    state = Y
-    do_yet_another_thing()
-``` 
-
-With a state machine:
-
-```python
-state_machine.handle(message) # hooks do_something()
-...
-state_machine.handle(message) # hooks do_something_else()
-...
-state_machine.handle(message) # hooks do_yet_another_thing()
-```
-
-Under maintenance, the robustness of the state machine approach is compelling.
-Compare the approaches for how many places you might have to change if you had
-a bug in how state Y is handled... The state machine approach also provides a
-convenient way to load persisted state later, when a message arrives for an
-interaction that is only partly complete. And it makes formal
-testing for completeness and security much easier.
-
-The tictactoe example includes a complete state machine in less than 50
-lines of code. See [state-machine.py](tictactoe/state_machine.py). The
-unit tests prove once and for all that the rules of the tictactoe protocol
-(not the rules of the game, but the rules of how moves are communicated
-and reacted to) are perfectly followed, in a [similarly brief chunk of code](
-tictactoe/test_state_machine.py).
-
-[![state machine thumbnail](state-machine-thumbnail.png)](
-tictactoe/state_machine.py)
-
-For an extended discussion of how state machines can be used, including in nested
-protocols, and with hooks that let custom processing happen at each point in
-a flow, see [https://github.com/dhh1128/distributed-state-machine](
-https://github.com/dhh1128/distributed-state-machine/blob/master/README.md).
-
-### Processing Points
-
-A protocol definition describes key points in the flow where business logic
-can attach. Some of these __processing points__ are obvious, because the
-protocol calls for a decision to be made. Others are implicit. Some examples
-include:
-
-* The _beginning_ and _end_.
-* The _launch of a subprotocol_.
-* The _completion of a subprotocol_, or the _subprotocol changing state_.
-* _Sending a message_. (For each send, the sender could choose to go silent
-and abandon the interaction instead, though many
-protocols would ask for notification to be emitted as best practice.)
-* (Receiving a message_. (Requires validation, then integration
-with policy and processes internal to the agent and its sovereign domain,
-to move the interaction forward.)
-
-When a protocol is modeled with a state machine, each of these processing
-points can be hooked without cluttering the state machine itself. This is
-a nice encapsulation pattern.
-
-### State Machine Scope
-
-If you study the state machine example in the tictactoe protocol, you will
-see that the state machine only concerns itself with *interacting* correctly;
-it doesn't deal with implementing game logic such as deciding what a valid move
-is. This is the job of an entirely different object, [game.py](tictactoe/game.py).
-
-Agents building protocol support are going to see a similar pattern. The state
-machine guarantees that rules about interacting with other parties are followed
-correctly; other logic is needed to implement business rules, make decisions,
-and so forth. Notice how the tictactoe state machine includes hooks (its `pre`
-and `post` and `on_error` members) that allow it to be connected to other
-code at processing points.
-
diff --git a/concepts/0003-protocols/template.md b/concepts/0003-protocols/template.md
deleted file mode 100644
index 31ed74c..0000000
--- a/concepts/0003-protocols/template.md
+++ /dev/null
@@ -1,212 +0,0 @@
-# Template for Protocol RFCs
-
-A protocol RFC conforms to general RFC patterns, but includes some
-specific substructure.
-
-[![template sections](template-sections.png)](
-https://docs.google.com/presentation/d/15UAkh_2WfDk7wlto7pSL7YU9NJr_XVMgGAOeNIRbzK8/edit#slide=id.g5609c67f13_0_113)
-
-### "Name and Version" under "Tutorial"
-
-The first section of a protocol RFC, under "Tutorial", should be called
-"Name and Version". It should specify the official name of the protocol
-and its version.
-
-Protocol names are conventionally lower_snake_case (especially in URIs),
-but are compared case-insensitively and ignoring punctuation. This means
-that all of the following protocol names are considered identical in
-comparison, and can be used interchangeably, depending on what's appropriate
-for a given context (a user-friendly doc vs. CSS vs. python class vs. java class):
-
-* `Let's Do Lunch!`
-* `lets-do-lunch`
-* `lets_do_lunch`
-* `LetsDoLunch`
-
-##### URI representation
-
-Message types and protocols are identified with special URIs that match
-certain conventions. See [Message Type and Protocol Identifier URIs](
-uris.md) for more details.
-
-##### Semver
-
-The version of a protocol is declared carefully. See [Semver Rules for
-Protocols](semver.md) for details.
-
-### "Key Concepts" under "Tutorial"
-
-This is the first subsection under "Tutorial". It is short--a paragraph or
-two. It defines terms and describes the flow of the interaction at a very
-high level. Key preconditions should be noted (e.g., "You can't issue a
-credential until you have completed the _connection_ protocol first"), as
-well as ways the protocol can start and end, and what can go wrong. The
-section might also talk about timing constraints and other assumptions.
-After reading this section, a developer should know what problem your
-protocol solves, and should have a rough idea of how the protocol works in
-its simpler variants.
-
-### "Roles" under "Tutorial"
-
->See [this note](roles-participants-etc.md) for definitions of the terms
-"role", "participant", and "party".
-
-The "Roles" subsection comes next in a protocol RFC. It gives a formal name
-to each role in the protocol, says who and how many can play each role, and
-describes constraints associated with those roles (e.g., "You can only issue
-a credential if you have a DID on the public ledger"). The issue of qualification
-for roles can also be explored (e.g., "The holder of the credential must be known
-to the issuer").
-
-The formal names for each role are important because they are used when
-[agents discover one another's capabilities](
-https://github.com/hyperledger/indy-hipe/pull/73); an agent doesn't
-just claim that it supports a protocol; it makes a claim about which
-*roles* in the protocol it supports. An agent that supports credential
-issuance and an agent that supports credential holding may have very
-different features, but they both use the _credential-issuance_ protocol.
-By convention, role names use lower-kebab-case but are compared
-case-insensitively and ignoring punctuation.
-
-### "States" under "Tutorial"
-
-This section lists the possible states that exist for each role. It also
-enumerates the events (often but not always messages) that can occur,
-including errors, and what should happen to state as a result. A formal
-representation of this information is provided in a _state machine matrix_.
-It lists events as columns, and states as rows; a cell answers the
-question, "If I am in state X (=row), and event Y (=column) occurs,
-what happens to my state?" The [Tic Tac Toe example](tictactoe/README.md#states)
-is typical.
-
-[Choreography Diagrams](
-https://www.visual-paradigm.com/guide/bpmn/bpmn-orchestration-vs-choreography-vs-collaboration/#bpmn-choreography)
-from [BPMN](README.md#bpmn) are good artifacts here, as are [PUML sequence diagrams](
-http://plantuml.com/sequence-diagram) and [UML-style state machine diagrams](http://agilemodeling.com/artifacts/stateMachineDiagram.htm).
-The matrix form is nice because it forces an exhaustive analysis of every
-possible event. The diagram styles are often simpler to create and consume,
-and the PUML and BPMN forms have the virtue that they can support line-by-line
-diffs when checked in with source code. However, they don't offer an
-easy way to see if all possible flows have been considered; what they may
-NOT describe isn't obvious. This--and the freedom from fancy tools--is why
-the matrix form is used in many early RFCs. We leave it up to
-the community to settle on whether it wants to strongly recommend specific
-diagram types.
-
-The formal names for each state are important, as they are used in [`ack`s]( https://github.com/hyperledger/indy-hipe/pull/77)
-and [`problem-report`s](https://github.com/hyperledger/indy-hipe/pull/65)).
-For example, a `problem-report` message declares which state the sender
-arrived at because of the problem. This helps other participants
-to react to errors with confidence. Formal state names are also used in the
-agent test suite, in log messages, and so forth.
-
-By convention, state names use lower-kebab-case but are compared
-case-insensitively and ignoring punctuation.
-
-State management in protocols is a deep topic. For more information, please
-see [State Details and State Machines](state-details.md).
-
-### "Messages" under "Tutorial"
-
-If there is a message family associated with this protocol, this
-section describes each member of it. It should also note the names and
-versions of messages from other message families that are used by the
-protocol (e.g., an [`ack`]( https://github.com/hyperledger/indy-hipe/pull/77)
-or a [`problem-report`](https://github.com/hyperledger/indy-hipe/pull/65)).
-Typically this section is written as a narrative, showing each message
-type in the context of an end-to-end sample interaction. All possible
-fields may not appear; an exhaustive catalog is saved for the "Reference"
-section.
-
-Sample messages that are presented in the narrative should also be checked
-in next to the markdown of the RFC, in [DIDComm Plaintext format](
-https://github.com/hyperledger/indy-hipe/blob/master/text/0026-agent-file-format/README.md#agent-plaintext-messages-ap).
-
-##### Adopted Messages
-
-Many protocols should use general-purpose messages such as [`ack`](
-https://github.com/hyperledger/indy-hipe/pull/77) and [`problem-report`](
-https://github.com/hyperledger/indy-hipe/pull/65)) at certain points in
-an interaction. This reuse is strongly encouraged because it helps us avoid
-defining redundant message types--and the code to handle them--over and
-over again (see [DRY principle](https://en.wikipedia.org/wiki/Don't_repeat_yourself)).
-
-However, using messages with generic values of `@type` (e.g., `"@type":
-"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/notification/1.0/ack"`)
-introduces a challenge for agents as they route messages to their internal
-routines for handling. We expect internal handlers to be organized around
-protocols, since a protocol is a discrete unit of business value as well
-as a unit of testing in our agent test suite. Early work on agents has
-gravitated towards pluggable, routable protocols as a unit of code
-encapsulation and dependency as well. Thus the natural routing question
-inside an agent, when it sees a message, is "Which protocol handler should
-I route this message to, based on its @type?" A generic `ack` can't be
-routed this way.
-
-Therefore, we allow a protocol to __adopt__ messages into its namespace.
-This works very much like python's `from module import symbol` syntax.
-It changes the `@type` attribute of the adopted message. Suppose a `rendezvous`
-protocol is identified by the URI `did:sov:mYhnRbzCbsjhiQzDAstHgU;spec/rendezvous/2.0`,
-and its definition announces that it has adopted generic 1.x `ack`
-messages. When such `ack` messages are sent, the `@type` should now use
-the alias defined inside the namespace of the `rendezvous` protocol:
-
-![diff on @type caused by adoption](adoption.png)
-
-Adoption should be declared in an "Adopted" subsection of "Messages" in
-a protocol RFC. When adoption is specified, it should include a __minimum
-adopted version__ of the adopted message type: "This protocol adopts
-`ack` with version >= 1.4". All versions of the adopted message that share
-the same major number should be compatible, given the [semver rules](semver.md)
-that apply to protocols.
-
-### "Constraints" under "Tutorial"
-
-Many protocols have constraints that help parties build trust.
-For example, in buying a house, the protocol includes such things as
-commission paid to realtors to guarantee their incentives, title insurance,
-earnest money, and a phase of the process where a home inspection takes
-place. If you are documenting a protocol that has attributes like
-these, explain them here. If not, the section can be omitted.
-
-### "Messages" under "Reference"
-
-Unless the "Messages" section under "Tutorial" covered everything that
-needs to be known about all message fields, this is where the data type,
-validation rules, and semantics of each field in each message type are
-details. Enumerating possible values, or providing ABNF or regexes is
-encouraged. Following conventions such as [those for date-
-and time-related fields](https://github.com/hyperledger/indy-hipe/pull/76)
-can save a lot of time here.
-
-Each message type should be associated with one or more roles in the 
-protocol. That is, it should be clear which roles can send and receive
-which message types.
-
-### "Examples" under "Reference"
-
-This section is optional. It can be used to show alternate flows through
-the protocol.
-
-### "Collateral" under "Reference"
-
-This section is optional. It could be used to reference files, code,
-relevant standards, oracles, test suites, or other artifacts that would
-be useful to an implementer. In general, collateral should be checked in
-with the RFC.
-
-### "Localization" under "Reference"
-
-If communication in the protocol involves humans, then localization of
-message content may be relevant. Default settings for localization of
-all messages in the protocol can be specified in an `l10n.json` file
-described here and checked in with the RFC. See ["Decorators at Message
-Type Scope"](https://github.com/hyperledger/indy-hipe/blob/318f265d508a3ddf1da7d91c79ae4ae27ab9142b/text/localized-messages/README.md#decorator-at-message-type-scope)
-in the [Localization RFC](https://github.com/hyperledger/indy-hipe/pull/64).
-
-### "Message Catalog" under "Reference"
-
-If the protocol has a formally defined catalog of codes (e.g., for errors
-or for statuses), define them in this section. See ["Message Codes and
-Catalogs"](https://github.com/hyperledger/indy-hipe/blob/318f265d508a3ddf1da7d91c79ae4ae27ab9142b/text/localized-messages/README.md#message-codes-and-catalogs)
-in the [Localization HIPE](https://github.com/hyperledger/indy-hipe/pull/64).
diff --git a/concepts/0003-protocols/tictactoe/.idea/markdown-exported-files.xml b/concepts/0003-protocols/tictactoe/.idea/markdown-exported-files.xml
deleted file mode 100644
index 5d1f129..0000000
--- a/concepts/0003-protocols/tictactoe/.idea/markdown-exported-files.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="MarkdownExportedFiles">
-    <htmlFiles />
-    <imageFiles />
-    <otherFiles />
-  </component>
-</project>
\ No newline at end of file
diff --git a/concepts/0003-protocols/tictactoe/.idea/markdown-navigator.xml b/concepts/0003-protocols/tictactoe/.idea/markdown-navigator.xml
deleted file mode 100644
index c17600a..0000000
--- a/concepts/0003-protocols/tictactoe/.idea/markdown-navigator.xml
+++ /dev/null
@@ -1,86 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="MarkdownProjectSettings" wasCopied="true">
-    <PreviewSettings splitEditorLayout="SPLIT" splitEditorPreview="PREVIEW" useGrayscaleRendering="false" zoomFactor="1.0" maxImageWidth="0" showGitHubPageIfSynced="false" allowBrowsingInPreview="false" synchronizePreviewPosition="true" highlightPreviewType="NONE" highlightFadeOut="5" highlightOnTyping="true" synchronizeSourcePosition="true" verticallyAlignSourceAndPreviewSyncPosition="true" showSearchHighlightsInPreview="true" showSelectionInPreview="true" openRemoteLinks="true" replaceUnicodeEmoji="false" lastLayoutSetsDefault="false">
-      <PanelProvider>
-        <provider providerId="com.vladsch.idea.multimarkdown.editor.swing.html.panel" providerName="Default - Swing" />
-      </PanelProvider>
-    </PreviewSettings>
-    <ParserSettings gitHubSyntaxChange="false" emojiShortcuts="0" emojiImages="0">
-      <PegdownExtensions>
-        <option name="ABBREVIATIONS" value="false" />
-        <option name="ANCHORLINKS" value="true" />
-        <option name="ASIDE" value="false" />
-        <option name="ATXHEADERSPACE" value="true" />
-        <option name="AUTOLINKS" value="false" />
-        <option name="DEFINITIONS" value="false" />
-        <option name="DEFINITION_BREAK_DOUBLE_BLANK_LINE" value="false" />
-        <option name="FENCED_CODE_BLOCKS" value="true" />
-        <option name="FOOTNOTES" value="false" />
-        <option name="HARDWRAPS" value="false" />
-        <option name="HTML_DEEP_PARSER" value="false" />
-        <option name="INSERTED" value="false" />
-        <option name="QUOTES" value="false" />
-        <option name="RELAXEDHRULES" value="true" />
-        <option name="SMARTS" value="false" />
-        <option name="STRIKETHROUGH" value="true" />
-        <option name="SUBSCRIPT" value="false" />
-        <option name="SUPERSCRIPT" value="false" />
-        <option name="SUPPRESS_HTML_BLOCKS" value="false" />
-        <option name="SUPPRESS_INLINE_HTML" value="false" />
-        <option name="TABLES" value="true" />
-        <option name="TASKLISTITEMS" value="true" />
-        <option name="TOC" value="false" />
-        <option name="WIKILINKS" value="true" />
-      </PegdownExtensions>
-      <ParserOptions>
-        <option name="ADMONITION_EXT" value="false" />
-        <option name="ATTRIBUTES_EXT" value="false" />
-        <option name="COMMONMARK_LISTS" value="false" />
-        <option name="DUMMY" value="false" />
-        <option name="EMOJI_SHORTCUTS" value="true" />
-        <option name="ENUMERATED_REFERENCES_EXT" value="false" />
-        <option name="FLEXMARK_FRONT_MATTER" value="false" />
-        <option name="GFM_LOOSE_BLANK_LINE_AFTER_ITEM_PARA" value="false" />
-        <option name="GFM_TABLE_RENDERING" value="true" />
-        <option name="GITBOOK_URL_ENCODING" value="false" />
-        <option name="GITHUB_LISTS" value="true" />
-        <option name="GITHUB_WIKI_LINKS" value="true" />
-        <option name="GITLAB_EXT" value="false" />
-        <option name="GITLAB_MATH_EXT" value="false" />
-        <option name="GITLAB_MERMAID_EXT" value="false" />
-        <option name="HEADER_ID_NON_ASCII_TO_LOWERCASE" value="false" />
-        <option name="HEADER_ID_NO_DUPED_DASHES" value="false" />
-        <option name="JEKYLL_FRONT_MATTER" value="false" />
-        <option name="MACROS_EXT" value="false" />
-        <option name="NO_TEXT_ATTRIBUTES" value="false" />
-        <option name="PARSE_HTML_ANCHOR_ID" value="false" />
-        <option name="PLANTUML_FENCED_CODE" value="false" />
-        <option name="PUML_FENCED_CODE" value="false" />
-        <option name="SIM_TOC_BLANK_LINE_SPACER" value="true" />
-      </ParserOptions>
-    </ParserSettings>
-    <HtmlSettings headerTopEnabled="false" headerBottomEnabled="false" bodyTopEnabled="false" bodyBottomEnabled="false" embedUrlContent="false" addPageHeader="true" embedImages="false" embedHttpImages="false" imageUriSerials="false" addDocTypeHtml="true" noParaTags="false" plantUmlConversion="0" mathConversion="-1">
-      <GeneratorProvider>
-        <provider providerId="com.vladsch.idea.multimarkdown.editor.swing.html.generator" providerName="Default Swing HTML Generator" />
-      </GeneratorProvider>
-      <headerTop />
-      <headerBottom />
-      <bodyTop />
-      <bodyBottom />
-    </HtmlSettings>
-    <CssSettings previewScheme="UI_SCHEME" cssUri="" isCssUriEnabled="false" isCssUriSerial="true" isCssTextEnabled="false" isDynamicPageWidth="true">
-      <StylesheetProvider>
-        <provider providerId="com.vladsch.idea.multimarkdown.editor.swing.html.css" providerName="Default Swing Stylesheet" />
-      </StylesheetProvider>
-      <ScriptProviders />
-      <cssText />
-      <cssUriHistory />
-    </CssSettings>
-    <AnnotatorSettings targetHasSpaces="true" linkCaseMismatch="true" wikiCaseMismatch="true" wikiLinkHasDashes="true" notUnderWikiHome="true" targetNotWikiPageExt="true" notUnderSourceWikiHome="true" targetNameHasAnchor="true" targetPathHasAnchor="true" wikiLinkHasSlash="true" wikiLinkHasSubdir="true" wikiLinkHasOnlyAnchor="true" linkTargetsWikiHasExt="true" linkTargetsWikiHasBadExt="true" notUnderSameRepo="true" targetNotUnderVcs="false" linkNeedsExt="true" linkHasBadExt="true" linkTargetNeedsExt="true" linkTargetHasBadExt="true" wikiLinkNotInWiki="true" imageTargetNotInRaw="true" repoRelativeAcrossVcsRoots="true" multipleWikiTargetsMatch="true" unresolvedLinkReference="true" linkIsIgnored="true" anchorIsIgnored="true" anchorIsUnresolved="true" anchorLineReferenceIsUnresolved="true" anchorLineReferenceFormat="true" anchorHasDuplicates="true" abbreviationDuplicates="true" abbreviationNotUsed="true" attributeIdDuplicateDefinition="true" attributeIdNotUsed="true" footnoteDuplicateDefinition="true" footnoteUnresolved="true" footnoteDuplicates="true" footnoteNotUsed="true" macroDuplicateDefinition="true" macroUnresolved="true" macroDuplicates="true" macroNotUsed="true" referenceDuplicateDefinition="true" referenceUnresolved="true" referenceDuplicates="true" referenceNotUsed="true" referenceUnresolvedNumericId="true" enumRefDuplicateDefinition="true" enumRefUnresolved="true" enumRefDuplicates="true" enumRefNotUsed="true" enumRefLinkUnresolved="true" enumRefLinkDuplicates="true" simTocUpdateNeeded="true" simTocTitleSpaceNeeded="true" />
-    <HtmlExportSettings updateOnSave="false" parentDir="" targetDir="" cssDir="css" scriptDir="js" plainHtml="false" imageDir="" copyLinkedImages="false" imageUniquifyType="0" targetPathType="2" targetExt="" useTargetExt="false" noCssNoScripts="false" useElementStyleAttribute="false" linkToExportedHtml="true" exportOnSettingsChange="true" regenerateOnProjectOpen="false" linkFormatType="HTTP_ABSOLUTE" />
-    <LinkMapSettings>
-      <textMaps />
-    </LinkMapSettings>
-  </component>
-</project>
\ No newline at end of file
diff --git a/concepts/0003-protocols/tictactoe/.idea/markdown-navigator/profiles_settings.xml b/concepts/0003-protocols/tictactoe/.idea/markdown-navigator/profiles_settings.xml
deleted file mode 100644
index db06266..0000000
--- a/concepts/0003-protocols/tictactoe/.idea/markdown-navigator/profiles_settings.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<component name="MarkdownNavigator.ProfileManager">
-  <settings default="" pdf-export="" plain-text-search-scope="Project Files" />
-</component>
\ No newline at end of file
diff --git a/concepts/0003-protocols/tictactoe/.idea/misc.xml b/concepts/0003-protocols/tictactoe/.idea/misc.xml
deleted file mode 100644
index a2e120d..0000000
--- a/concepts/0003-protocols/tictactoe/.idea/misc.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7" project-jdk-type="Python SDK" />
-</project>
\ No newline at end of file
diff --git a/concepts/0003-protocols/tictactoe/.idea/modules.xml b/concepts/0003-protocols/tictactoe/.idea/modules.xml
deleted file mode 100644
index f29adfd..0000000
--- a/concepts/0003-protocols/tictactoe/.idea/modules.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/tictactoe-1.0.iml" filepath="$PROJECT_DIR$/.idea/tictactoe-1.0.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
diff --git a/concepts/0003-protocols/tictactoe/.idea/tictactoe-1.0.iml b/concepts/0003-protocols/tictactoe/.idea/tictactoe-1.0.iml
deleted file mode 100644
index 7c9d48f..0000000
--- a/concepts/0003-protocols/tictactoe/.idea/tictactoe-1.0.iml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="PYTHON_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-  <component name="TestRunnerService">
-    <option name="projectConfiguration" value="pytest" />
-    <option name="PROJECT_TEST_RUNNER" value="pytest" />
-  </component>
-</module>
\ No newline at end of file
diff --git a/concepts/0003-protocols/tictactoe/.idea/vcs.xml b/concepts/0003-protocols/tictactoe/.idea/vcs.xml
deleted file mode 100644
index c2365ab..0000000
--- a/concepts/0003-protocols/tictactoe/.idea/vcs.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$/../../.." vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
diff --git a/concepts/0003-protocols/tictactoe/.idea/workspace.xml b/concepts/0003-protocols/tictactoe/.idea/workspace.xml
deleted file mode 100644
index 014fb4a..0000000
--- a/concepts/0003-protocols/tictactoe/.idea/workspace.xml
+++ /dev/null
@@ -1,348 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ChangeListManager">
-    <list default="true" id="8fe26d99-5938-48f2-b57f-a526db91ffbb" name="Default Changelist" comment="" />
-    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
-    <option name="SHOW_DIALOG" value="false" />
-    <option name="HIGHLIGHT_CONFLICTS" value="true" />
-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-    <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="FileEditorManager">
-    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
-      <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/game.py">
-          <provider selected="true" editor-type-id="text-editor">
-            <state>
-              <caret line="116" selection-start-line="116" selection-end-line="116" />
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="false" current-in-tab="true">
-        <entry file="file://$PROJECT_DIR$/state_machine.py">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="391">
-              <caret line="23" column="17" lean-forward="true" selection-start-line="23" selection-start-column="17" selection-end-line="23" selection-end-column="17" />
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/test_state_machine.py">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="-7">
-              <caret line="141" column="20" selection-start-line="141" selection-start-column="20" selection-end-line="141" selection-end-column="20" />
-              <folding>
-                <element signature="e#0#13#0" expanded="true" />
-              </folding>
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="false" current-in-tab="false">
-        <entry file="file:///usr/local/lib/python3.7/site-packages/_pytest/python.py">
-          <provider selected="true" editor-type-id="text-editor">
-            <state>
-              <caret line="165" selection-start-line="165" selection-end-line="165" />
-            </state>
-          </provider>
-        </entry>
-      </file>
-    </leaf>
-  </component>
-  <component name="FindInProjectRecents">
-    <findStrings>
-      <find>basic</find>
-    </findStrings>
-    <replaceStrings>
-      <replace>sm</replace>
-    </replaceStrings>
-  </component>
-  <component name="Git.Settings">
-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../../.." />
-  </component>
-  <component name="IdeDocumentHistory">
-    <option name="CHANGED_PATHS">
-      <list>
-        <option value="$PROJECT_DIR$/game.py" />
-        <option value="$PROJECT_DIR$/README.md" />
-        <option value="$PROJECT_DIR$/test_state_machine.py" />
-        <option value="$PROJECT_DIR$/state_machine.py" />
-      </list>
-    </option>
-  </component>
-  <component name="ProjectFrameBounds">
-    <option name="x" value="81" />
-    <option name="y" value="44" />
-    <option name="width" value="1585" />
-    <option name="height" value="1006" />
-  </component>
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
-  <component name="ProjectView">
-    <navigator proportions="" version="1">
-      <foldersAlwaysOnTop value="true" />
-    </navigator>
-    <panes>
-      <pane id="ProjectPane">
-        <subPane>
-          <expand>
-            <path>
-              <item name="tictactoe-1.0" type="b2602c69:ProjectViewProjectNode" />
-              <item name="tictactoe-1.0" type="462c0819:PsiDirectoryNode" />
-            </path>
-          </expand>
-          <select />
-        </subPane>
-      </pane>
-      <pane id="Scope" />
-    </panes>
-  </component>
-  <component name="PropertiesComponent">
-    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
-    <property name="settings.editor.selected.configurable" value="editor.preferences.fonts.default" />
-  </component>
-  <component name="RunDashboard">
-    <option name="ruleStates">
-      <list>
-        <RuleState>
-          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
-        </RuleState>
-        <RuleState>
-          <option name="name" value="StatusDashboardGroupingRule" />
-        </RuleState>
-      </list>
-    </option>
-  </component>
-  <component name="RunManager" selected="Python tests.pytest for test_state_machine.test_pre_hooks_deny">
-    <configuration name="pytest for test_state_machine.test_event_while_done" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
-      <module name="tictactoe-1.0" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
-      <option name="IS_MODULE_SDK" value="true" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="_new_keywords" value="&quot;&quot;" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;test_state_machine.test_event_while_done&quot;" />
-      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
-      <method v="2" />
-    </configuration>
-    <configuration name="pytest for test_state_machine.test_post_hooks" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
-      <module name="tictactoe-1.0" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
-      <option name="IS_MODULE_SDK" value="true" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="_new_keywords" value="&quot;&quot;" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;test_state_machine.test_post_hooks&quot;" />
-      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
-      <method v="2" />
-    </configuration>
-    <configuration name="pytest for test_state_machine.test_pre_hooks_deny" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
-      <module name="tictactoe-1.0" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
-      <option name="IS_MODULE_SDK" value="true" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="_new_keywords" value="&quot;&quot;" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;test_state_machine.test_pre_hooks_deny&quot;" />
-      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
-      <method v="2" />
-    </configuration>
-    <configuration name="pytest for test_state_machine.test_receive_move_in_wrapup" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
-      <module name="tictactoe-1.0" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
-      <option name="IS_MODULE_SDK" value="true" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="_new_keywords" value="&quot;&quot;" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;test_state_machine.test_receive_move_in_wrapup&quot;" />
-      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
-      <method v="2" />
-    </configuration>
-    <configuration name="pytest for test_state_machine.test_wrapup_from_me" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
-      <module name="tictactoe-1.0" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
-      <option name="IS_MODULE_SDK" value="true" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="_new_keywords" value="&quot;&quot;" />
-      <option name="_new_additionalArguments" value="&quot;&quot;" />
-      <option name="_new_target" value="&quot;test_state_machine.test_wrapup_from_me&quot;" />
-      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
-      <method v="2" />
-    </configuration>
-    <recent_temporary>
-      <list>
-        <item itemvalue="Python tests.pytest for test_state_machine.test_pre_hooks_deny" />
-        <item itemvalue="Python tests.pytest for test_state_machine.test_post_hooks" />
-        <item itemvalue="Python tests.pytest for test_state_machine.test_event_while_done" />
-        <item itemvalue="Python tests.pytest for test_state_machine.test_receive_move_in_wrapup" />
-        <item itemvalue="Python tests.pytest for test_state_machine.test_wrapup_from_me" />
-      </list>
-    </recent_temporary>
-  </component>
-  <component name="SvnConfiguration">
-    <configuration />
-  </component>
-  <component name="TaskManager">
-    <task active="true" id="Default" summary="Default task">
-      <changelist id="8fe26d99-5938-48f2-b57f-a526db91ffbb" name="Default Changelist" comment="" />
-      <created>1554504451370</created>
-      <option name="number" value="Default" />
-      <option name="presentableId" value="Default" />
-      <updated>1554504451370</updated>
-    </task>
-    <servers />
-  </component>
-  <component name="TestHistory">
-    <history-entry file="pytest_in_test_state_machine_py - 2019.04.05 at 17h 47m 29s.xml">
-      <configuration name="pytest in test_state_machine.py" configurationId="tests" />
-    </history-entry>
-    <history-entry file="pytest_for_test_state_machine_test_wrapup_from_me - 2019.04.05 at 19h 51m 43s.xml">
-      <configuration name="pytest for test_state_machine.test_wrapup_from_me" configurationId="tests" />
-    </history-entry>
-    <history-entry file="pytest_for_test_state_machine_test_receive_move_in_wrapup - 2019.04.05 at 19h 54m 01s.xml">
-      <configuration name="pytest for test_state_machine.test_receive_move_in_wrapup" configurationId="tests" />
-    </history-entry>
-    <history-entry file="pytest_for_test_state_machine_test_receive_move_in_wrapup - 2019.04.05 at 20h 16m 04s.xml">
-      <configuration name="pytest for test_state_machine.test_receive_move_in_wrapup" configurationId="tests" />
-    </history-entry>
-    <history-entry file="pytest_for_test_state_machine_test_event_while_done - 2019.04.05 at 20h 18m 02s.xml">
-      <configuration name="pytest for test_state_machine.test_event_while_done" configurationId="tests" />
-    </history-entry>
-    <history-entry file="pytest_for_test_state_machine_test_post_hooks - 2019.04.05 at 20h 31m 27s.xml">
-      <configuration name="pytest for test_state_machine.test_post_hooks" configurationId="tests" />
-    </history-entry>
-    <history-entry file="pytest_for_test_state_machine_test_pre_hooks_deny - 2019.04.05 at 20h 32m 55s.xml">
-      <configuration name="pytest for test_state_machine.test_pre_hooks_deny" configurationId="tests" />
-    </history-entry>
-    <history-entry file="pytest_for_test_state_machine_test_pre_hooks_deny - 2019.04.05 at 20h 33m 29s.xml">
-      <configuration name="pytest for test_state_machine.test_pre_hooks_deny" configurationId="tests" />
-    </history-entry>
-  </component>
-  <component name="ToolWindowManager">
-    <frame x="81" y="44" width="1585" height="1006" extended-state="0" />
-    <editor active="true" />
-    <layout>
-      <window_info content_ui="combo" id="Project" order="0" weight="0.2073882" />
-      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
-      <window_info id="Favorites" order="2" side_tool="true" />
-      <window_info anchor="bottom" id="Message" order="0" />
-      <window_info anchor="bottom" id="Find" order="1" />
-      <window_info anchor="bottom" id="Run" order="2" />
-      <window_info anchor="bottom" id="Debug" order="3" weight="0.39955106" />
-      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
-      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
-      <window_info anchor="bottom" id="TODO" order="6" />
-      <window_info anchor="bottom" id="Version Control" order="7" />
-      <window_info anchor="bottom" id="Terminal" order="8" />
-      <window_info anchor="bottom" id="Event Log" order="9" side_tool="true" />
-      <window_info anchor="bottom" id="Python Console" order="10" />
-      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
-      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
-      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
-      <window_info anchor="right" id="PlantUML" order="3" />
-    </layout>
-  </component>
-  <component name="XDebuggerManager">
-    <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/test_state_machine.py</url>
-          <line>39</line>
-          <option name="timeStamp" value="1" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/test_state_machine.py</url>
-          <line>107</line>
-          <option name="timeStamp" value="5" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/test_state_machine.py</url>
-          <line>157</line>
-          <option name="timeStamp" value="7" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/test_state_machine.py</url>
-          <line>145</line>
-          <option name="timeStamp" value="8" />
-        </line-breakpoint>
-      </breakpoints>
-    </breakpoint-manager>
-  </component>
-  <component name="editorHistoryManager">
-    <entry file="file://$PROJECT_DIR$/README.md">
-      <provider selected="true" editor-type-id="split-provider[text-editor;MarkdownPreviewEditor]">
-        <state split_layout="SPLIT">
-          <first_editor relative-caret-position="63">
-            <caret line="3" selection-start-line="3" selection-end-line="3" />
-          </first_editor>
-          <second_editor>
-            <markdownNavigatorState />
-          </second_editor>
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/move-3.png">
-      <provider selected="true" editor-type-id="images" />
-    </entry>
-    <entry file="file:///usr/local/lib/python3.7/site-packages/_pytest/python_api.py">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="169">
-          <caret line="665" selection-start-line="665" selection-end-line="665" />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/game.py">
-      <provider selected="true" editor-type-id="text-editor">
-        <state>
-          <caret line="116" selection-start-line="116" selection-end-line="116" />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file:///usr/local/lib/python3.7/site-packages/_pytest/python.py">
-      <provider selected="true" editor-type-id="text-editor">
-        <state>
-          <caret line="165" selection-start-line="165" selection-end-line="165" />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/test_state_machine.py">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="-7">
-          <caret line="141" column="20" selection-start-line="141" selection-start-column="20" selection-end-line="141" selection-end-column="20" />
-          <folding>
-            <element signature="e#0#13#0" expanded="true" />
-          </folding>
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/state_machine.py">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="391">
-          <caret line="23" column="17" lean-forward="true" selection-start-line="23" selection-start-column="17" selection-end-line="23" selection-end-column="17" />
-        </state>
-      </provider>
-    </entry>
-  </component>
-</project>
\ No newline at end of file
diff --git a/concepts/0003-protocols/tictactoe/README.md b/concepts/0003-protocols/tictactoe/README.md
index eb7554e..2d7ca7e 100644
--- a/concepts/0003-protocols/tictactoe/README.md
+++ b/concepts/0003-protocols/tictactoe/README.md
@@ -115,7 +115,7 @@ semantics.
     traditional URI here, such as http://example.com/spec/tictactoe/1.0.
     If that sort of URI is used, it is best practice for it to reference
     immutable content, as with a link to specific commit on github:
-      https://github.com/hyperledger/indy-hipe/blob/4a17a845/text/protocols/tictactoe-1.0/README.md#messages
+      https://github.com/hyperledger/aries-rfcs/blob/ab7a04f/concepts/0003-protocols/tictactoe/README.md#messages
 </blockquote>
     
 ##### `move` message
@@ -125,7 +125,7 @@ to the other. It looks like this:
 
 [![move 1](move-1.png)](move-1.json)
 
-`@id` is required here, as it establishes a [message thread](https://github.com/hyperledger/indy-hipe/pull/30)
+`@id` is required here, as it establishes a [message thread](../../0008-message-id-and-threading/README.md)
 that will govern the rest of the game.
 
 `me` tells which mark (X or O) the sender is placing.
@@ -142,8 +142,7 @@ with columns A, B, and C, and rows 1, 2, and 3.
 
 `comment` is optional and probably not used much, but could be a way
 for players to razz one another or chat as they play. It follows the
-conventions of [localized messages](
-https://github.com/hyperledger/indy-hipe/pull/64).
+conventions of [localized messages](../../../features/0043-l10n/README.md).
 
 Other decorators could be placed on tic-tac-toe messages, such as those
 to enable [message timing](../../../features/0032-message-timing/README.md)
@@ -159,7 +158,7 @@ accurately reflect the role of the message sender; it thus alternates
 values between `X` and `O`.
 
 Subsequent messages in the game use the [message threading](
-https://github.com/hyperledger/indy-hipe/pull/30) mechanism where the
+../../0008-message-id-and-threading/README.md) mechanism where the
 `@id` of the first `move` becomes the `~thread.thid` for the duration
 of the game.
 
@@ -191,8 +190,7 @@ The state of the game at any given point of time is fully captured by
 the moves, regardless of the order in which they were made.
 
 If a player makes an illegal move or another error occurs, the other
-player can complain using a [problem-report](
-https://github.com/hyperledger/indy-hipe/blob/6a5e4fe2d7e14953cd8e3aed07d886176332e696/text/error-handling/README.md#the-problem-report-message-type)
+player can complain using a [problem-report](../../../features/0035-report-problem/README.md)
 message, with `explain.@l10n.code` set to one of the values defined
 in the Message Catalog section (see below).
 
@@ -269,8 +267,7 @@ message must be decorated with `~l10n.locale` to make automated translation
 possible.
 
 There is one other way that localization is relevant to this protocol: in error
-messages. Errors are communicated through the general [problem-report](
-https://github.com/hyperledger/indy-hipe/blob/6a5e4fe2d7e14953cd8e3aed07d886176332e696/text/error-handling/README.md#the-problem-report-message-type)
+messages. Errors are communicated through the general [problem-report](../../../features/0035-report-problem/README.md#the-problem-report-message-type)
 message type rather than through a special message type that's part of the
 `tictactoe` family. However, we define a catalog of tictactoe-specific error codes
 below to make this protocol's specific error strings localizable. 
@@ -286,8 +283,8 @@ RFC as [~l10n.json](~l10n.json), for easy machine parsing.
 Individual messages can use the `~l10n` decorator to supplement or override
 these settings.
 
-For more information about localization concepts, see the [HIPE about localized
-messages](https://github.com/hyperledger/indy-hipe/blob/569357c6/text/localized-messages/README.md#message-codes-and-catalogs).
+For more information about localization concepts, see the [RFC about localized
+messages](../../../features/0043-l10n/README.md#message-codes-and-catalogs).
 
 ### Message Catalog
 
@@ -306,8 +303,7 @@ as [catalog.json](catalog.json), for easy machine parsing. The catalog
 currently contains localized alternatives only for English. Other language
 contributions would be welcome.
 
-For more information, see the [Message Catalog section of the localization HIPE](
-https://github.com/hyperledger/indy-hipe/blob/569357c6/text/localized-messages/README.md#message-codes-and-catalogs
+For more information, see the [Message Catalog section of the localization HIPE](../../../features/0043-l10n/README.md#message-codes-and-catalogs
 ).
 
 ## Implementations
@@ -316,4 +312,5 @@ The following lists the implementations (if any) of this RFC. Please do a pull r
 
 Name / Link | Implementation Notes
 --- | ---
-[Verity](https://www.evernym.com/products/) | Commercially licensed enterprise agent, SaaS or on-prem. 
\ No newline at end of file
+[Verity](https://www.evernym.com/products/) | Commercially licensed enterprise agent, SaaS or on-prem.
+[Pico Labs](http://picolabs.io/) | Open source [TicTacToe](https://github.com/Picolab/TicTacToe) for [Pico Agents](https://github.com/Picolab/G2S)
diff --git a/concepts/0003-protocols/uris.md b/concepts/0003-protocols/uris.md
deleted file mode 100644
index 84f8b6d..0000000
--- a/concepts/0003-protocols/uris.md
+++ /dev/null
@@ -1,92 +0,0 @@
-# Message Type and Protocol Identifier URIs
-
-Message types and protocols are identified with URIs that match certain
-conventions.
-
-### MTURI
-
-A __message type URI__ (MTURI) identifies message types unambiguously.
-Standardizing its format is important because it is parsed by agents that
-will map messages to handlers--basically, code will look at this string and
-say, "Do I have something that can handle this message type inside protocol
-*X* version *Y*?" When that analysis happens, it must do more than compare
-the string for exact equality; it may need to check for semver compatibility,
-and it has to compare the protocol name and message type name ignoring case
-and punctuation.
-
-The URI MUST be composed as follows:
-
-![MTURI structure](mturi-structure.png)
- 
-```ABNF
-message-type-uri  = doc-uri delim protocol-name 
-    "/" protocol-version "/" message-type-name
-delim             = "?" / "/" / "&" / ":" / ";" / "="
-protocol-name     = identifier
-protocol-version  = semver
-message-type-name = identifier
-identifier        = alpha *(*(alphanum / "_" / "-" / ".") alphanum)
-```
-
-It can be loosely matched and parsed with the following regex:
-
-    (.*?)([a-z0-9._-]+)/(\d[^/]*)/([a-z0-9._-]+)$
-
-A match will have captures groups of (1) = `doc-uri`, (2) = `protocol-name`,
-(3) = `protocol-version`, and (4) = `message-type-name`.
-
-The goals of this URI are, in descending priority:
-
-* Code can use the URI to route messages to protocol
-handlers using [semver rules](semver.md).
-
-* The definition of a protocol should be tied to the URI such
-that it is semantically stable. This means that once version 1.0
-of a protocol is defined, its definition [should not change in
-ways that would break implementations](semver.md).
-
-* Developers can discover information about novel protocols, using
-the URI to browse or search the web.
-
-The `doc-uri` portion is any URI that exposes documentation about
-protocols. A developer should be able to browse to that URI and use human intelligence
-to look up the named and versioned protocol. Optionally and preferably, the
-full URI may produce a page of documentation about the specific message type,
-with no human mediation involved.
-
-### PIURI
-
-A shorter URI that follows the same conventions but lacks the
-`message-type-name` portion is called a __protocol identifier URI__
-(PIURI).
- 
- 
-![PIURI structure](piuri-structure.png)
- 
-```ABNF
-protocol-identifier-uri  = doc-uri delim protocol-name 
-    "/" semver
-```
-
-Its loose matcher regex is:
-
-    (.*?)([a-z0-9._-]+)/(\d[^/]*)/?$
-    
-Some examples of valid MTURIs and PIURIs include:
-
-* `http://example.com/protocols?which=lets_do_lunch/1.0/` (PIURI with fully automated lookup of protocol docs)
-* `http://example.com/message_types?which=lets_do_lunch/1.0/proposal` (MTURI)
-* `https://github.com/hyperledger/indy-hipe/tree/d7879f5e/text:trust_ping/1.0/ping`
-   (MTURI). Note that this URI returns a 404 error if followed directly--but
-   per rules described above, the developer should browse to the doc root
-   ([https://github.com/hyperledger/indy-hipe/tree/d7879f5e/text](
-   https://github.com/hyperledger/indy-hipe/tree/d7879f5e/text
-   )) and look for documentation on the `trust_ping/1.0` protocol.
-* `did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/trust_ping/1.0/ping` (MTURI) This
-   uses a DID reference to look up an endpoint named `spec` that serves
-   information about protocols. (The exact syntax of DID references--URIs
-   where the DID functions like a domain name, and additional info is
-   fetched from a DID Doc in much the same way IP address and hostname
-   definitions are fetched from a DNS record--is still being finalized.
-   See the latest [DID Spec](https://w3c-ccg.github.io/did-spec/) for details.)
-

>>>>>>>> Changed protocol: concepts/0004-agents, latest commit to protocol: 5f350d4a2687f846df8f11d2b1afe563a0284f3c

diff --git a/concepts/0004-agents/README.md b/concepts/0004-agents/README.md
index 29edeb4..b1147aa 100644
--- a/concepts/0004-agents/README.md
+++ b/concepts/0004-agents/README.md
@@ -502,4 +502,5 @@ Name / Link | Implementation Notes
 [Connect.Me](https://www.evernym.com/blog/connect-me-sovrin-digital-wallet/) | Free mobile app from Evernym. Installed via app store on iOS and Android. 
 [Verity](https://www.evernym.com/products/) | Commercially licensed enterprise agent, SaaS or on-prem.
 [Aries Protocol Test Suite](https://github.com/hyperledger/aries-protocol-test-suite) | 
+[Pico Labs](http://picolabs.io/) | [Pico Agents](https://github.com/Picolab/G2S) protocols: connections, trust_ping, basicmessage, routing
  

>>>>>>>> Changed protocol: concepts/0005-didcomm, latest commit to protocol: f7f13bd92a702eeacff7de1aee2feac2cca8a92a

diff --git a/concepts/0005-didcomm/README.md b/concepts/0005-didcomm/README.md
index 9f1d2df..ac65bfa 100644
--- a/concepts/0005-didcomm/README.md
+++ b/concepts/0005-didcomm/README.md
@@ -13,6 +13,8 @@
 Explain the basics of __DID communication__ (__DIDComm__) at a
 high level, and link to other RFCs to promote deeper exploration.
 
+>NOTE: The version of DIDComm collectively defined in Aries RFCs is known by the label "DIDComm V1." A [newer version of DIDComm](https://identity.foundation/didcomm-messaging/spec/) ("DIDComm V2") is now being [incubated](https://github.com/decentralized-identity/didcomm-messaging) at DIF. Many concepts are the same between the two versions, but there are some differences in the details. For information about detecting V1 versus V2, see [Detecting DIDComm Versions](../../features/0044-didcomm-file-and-mime-types/README.md#detecting-didcomm-versions).
+
 ## Motivation
 
 The DID communication between [agents](../0004-agents/README.md) and [agent-like things](../0004-agents/README.md#the-agent-ness-continuum) is a rich subject with a lot of tribal
@@ -182,4 +184,5 @@ Name / Link | Implementation Notes
 [Connect.Me](https://www.evernym.com/blog/connect-me-sovrin-digital-wallet/) | Free mobile app from Evernym. Installed via app store on iOS and Android. 
 [Verity](https://www.evernym.com/products/) | Commercially licensed enterprise agent, SaaS or on-prem.
 [Aries Protocol Test Suite](https://github.com/hyperledger/aries-protocol-test-suite) | 
+[Pico Labs](http://picolabs.io/) | [Pico Agents](https://github.com/Picolab/G2S) protocols: connections, trust_ping, basicmessage, routing
  

>>>>>>>> Changed protocol: concepts/0008-message-id-and-threading, latest commit to protocol: 6c037391fc986a454dc3f0737aff8e856ac100d3

diff --git a/concepts/0008-message-id-and-threading/README.md b/concepts/0008-message-id-and-threading/README.md
index 495e827..6ccdc69 100644
--- a/concepts/0008-message-id-and-threading/README.md
+++ b/concepts/0008-message-id-and-threading/README.md
@@ -61,7 +61,8 @@ Message threading will be implemented as a [decorator](../0011-decorators/README
         "thid": "98fd8d72-80f6-4419-abc2-c65ea39d0f38",
         "pthid": "1e513ad4-48c9-444e-9e7e-5b8b45c5e325",
         "sender_order": 3,
-        "received_orders": {"did:sov:abcxyz":1}
+        "received_orders": {"did:sov:abcxyz":1},
+        "goal_code": "aries.vc.issue"
     },
     "example_attribute": "example_value"
 }
@@ -81,16 +82,17 @@ A thread object has the following fields discussed below:
   from other sender(s) on the thread. (This value is often missing if it
   is the first message in an interaction, but should be used otherwise,
   as it provides an implicit ACK.)
+* `goal_code`: Optional. See [RFC 0519: Goal Codes](../0519-goal-codes/README.md).
 
 #### Thread ID (`thid`)
 
 Because multiple interactions can happen simultaneously, it's important to
 differentiate between them. This is done with a Thread ID or `thid`.
 
-The Thread ID is the Message ID (`@id`) of the first message in the thread. The
-first message may or may not declare the `~thread` attribute block; it
-does not, but carries an
-implicit `thid` of its own `@id`.
+If the Thread object is defined and a `thid` is given, the Thread ID is the value
+given there. But if the Thread object is not defined in a message, the Thread ID is 
+implicitly defined as the Message ID (`@id`) of the given message and that message is
+the first message of a new thread.
 
 #### Sender Order (`sender_order`)
 

>>>>>>>> Changed protocol: concepts/0011-decorators, latest commit to protocol: 139136275370b92c90a0d2fb775719d0c7f0cb9e

diff --git a/concepts/0011-decorators/README.md b/concepts/0011-decorators/README.md
index 247af2c..6d25745 100644
--- a/concepts/0011-decorators/README.md
+++ b/concepts/0011-decorators/README.md
@@ -116,7 +116,7 @@ Or they may associate a key with a more complex structure:
 "~thread": {
   "thid": "e2987006-a18a-4544-9596-5ad0d9390c8b",
   "pthid": "0c8be298-45a1-48a4-5996-d0d95a397006",
-  "seqnum": 0
+  "sender_order": 0
 }
 ```
 
@@ -188,7 +188,7 @@ targets:
   type. If this happens, semantics of the decorator on the message type should be
   understood as overriding or enriching the semantics of that same decorator on the
   parent message family, since the scope is becoming more specific.
-* [**Message Thread**](http://bit.ly/2SL5kab) **or thread tree**: A participant in a
+* [**Message Thread**](../0008-message-id-and-threading/README.md) **or thread tree**: A participant in a
   thread could send a message containing nothing but the `~thread` with one or
   more additional decorators *inside* it. This should be viewed as a statement of semantics that
   apply to subsequent communications from the sender, on that thread, until further

>>>>>>>> Changed protocol: concepts/0017-attachments, latest commit to protocol: fb0808025188c7dd785c3067c282c1753541494d

diff --git a/concepts/0017-attachments/README.md b/concepts/0017-attachments/README.md
index 742e7c5..393c69c 100644
--- a/concepts/0017-attachments/README.md
+++ b/concepts/0017-attachments/README.md
@@ -1,6 +1,6 @@
 # Aries RFC 0017: Attachments
 
-- Authors: [Daniel Hardman](daniel.hardman@gmail.com), Sam Curren
+- Authors: [Daniel Hardman](daniel.hardman@gmail.com), Sam Curren, Andrew Whitehead
 - Status: [ACCEPTED](/README.md#accepted)
 - Since: 2019-01-31
 - Status Note: Used in a number of other RFCs.
@@ -36,21 +36,22 @@ data, and vice versa. After all, any data can be transmitted over
 DIDComm; doesn't that turn it into a message? And any message can
 be saved; doesn't that make it data?
 
-What it is true that messages and data are highly related,
+While it is true that messages and data are highly related,
 some semantic differences matter:
 
-* _Messages are primarily about communication_. Their meaning is tied
+* __Messages are primarily about communication__. Their meaning is tied
 to a communication context. [Messages are a mechanism whereby
 state evolves in a protocol](../0003-protocols/README.md#ingredients).
 Protocols are [versioned according to the structure and semantics of
-messages](../0003-protocols/semver.md).
+messages](../0003-protocols/README.md#semver-rules-for-protocols).
 Messages are usually small, consisting of a modest number of fields with
 a structure that's focused on furthering the goals of their protocol.
 
-* _Data has meaning at rest_, in many different DIDComm protocols, or
+* __Data has meaning at rest__, in many different DIDComm protocols, or
 in important contexts beyond DIDComm. Data may be very large and very
 complex. It may come in formats that are quite independent from
-DIDComm. Data may be produced, consumed or handled as part of a
+DIDComm, versioned independently from the protocols that share it.
+Data may be produced, consumed or handled as part of a
 protocol, but the actual content of the data is usually not where
 processing at the protocol level focuses. In agent codebases, it would
 be common for data handling to be implemented in different classes
@@ -64,11 +65,10 @@ artifacts are data, whereas the information packets that arrange the
 transmission and provide a carrying mechanism for the artifacts are
 messages.
 
-* A DIDComm message can be used to [report an error](https://github.com/hyperledger/indy-hipe/blob/d6503aeb/text/error-reporting/README.md). Descriptive
+* A DIDComm message can be used to [report an error](../../features/0035-report-problem/README.md). Descriptive
 parameters that change how the error is processed are probably
 part of the message, whereas a log file that provides supporting
-information should be thought of as data rather than the message
-proper.
+information should be thought of as data rather than the message.
 
 * The protocol for issuing credentials consists of messages that flow
 through certain steps. One of the steps eventually delivers a credential.
@@ -84,7 +84,7 @@ venue, instructions about how to unlock the gate, pictures of certain
 resources, and so forth. This collateral is _data_, whereas the messages
 that signal progression through the steps of scheduling are not.
 
-* The [Connection Protocol](https://github.com/hyperledger/indy-hipe/blob/master/text/0031-connection-protocol/README.md)
+* The [DID Exchange Protocol](../../features/0023-did-exchange/README.md)
 exchanges messages to establish a connection between two parties. Part of
 what's exchanged is a DID Doc. The DID Doc is more like _data_ than it is
 like an ordinary _message_, since it has meaning at rest and outside the
@@ -92,9 +92,9 @@ protocol.
 
 The line between these two concepts may not be perfectly crisp in all cases,
 and that is okay. It is clear enough, most of the time, to provide context
-for the central question of this HIPE, which is:
+for the central question of this RFC, which is:
 
->How do we send data through messages?
+> How do we send data along with messages?
 
 ### 3 Ways
 
@@ -107,16 +107,13 @@ Data can be "attached" to DIDComm messages in 3 ways:
 #### Inlining
 
 In __inlining__, data is directly assigned as the value paired with a JSON key
-in a DIDComm message. For example, [a DID Document is inlined as the
-value of the `did_doc` key in `connection_request` and
-`connection_response` messages in the Connection
-1.0 Protocol](https://github.com/hyperledger/indy-hipe/tree/master/text/0031-connection-protocol#example):
+in a DIDComm message. For example, a message about arranging a rendezvous may
+inline data about a location:
+[![inlined location](inlined.png)](rendezvous.json)
 
-[![inlined DID Doc](inlined.png)](connection-request.json)
-
-Notice that DID Docs have a meaning at rest, outside the message that
-conveys them. Notice as well that the versioning of DID Doc formats
-may evolve independent of the versioning of the connection protocol.
+This inlined data is in Google Maps pinning format. It has a meaning at rest,
+outside the message that conveys it, and the versioning of its structure
+may evolve independently of the versioning of the rendezvous protocol.
 
 Only JSON data can be inlined, since any other data format would break
 JSON format rules.
@@ -132,7 +129,7 @@ can share common handling logic in agent code. The attachment descriptor structu
 describes the MIME type and other properties of the data, in much the
 same way that MIME headers and body describe and contain an attachment
 in an email message. Given an imaginary protocol that photographers could
-use to share a their favorite photo with friends, the embedded data might
+use to share their favorite photo with friends, the embedded data might
 manifest like this:
 
 [![embedded photo](embedded.png)](photo-share.json)
@@ -339,6 +336,73 @@ whichever mechanism(s) are best suited to its individual needs and capabilities.
 [TODO: discuss sending an empty message with just attachments, and how to
 request a send of an attachment, or an alternate download method for it]
 
+### Signing Attachments
+
+In some cases it may be desirable to sign an attachment in addition to or instead of
+signing the message as a whole. Consider a home-buying protocol; the home inspection
+needs to be signed even when it is removed from a messaging flow. Attachments may
+also be signed by a party separate from the sender of the message, or using a different
+signing key when the sender is performing key rotation.
+
+Embedded and appended attachments support signatures by the addition of a `data.jws` field
+containing a signature in [JWS (RFC 7515) format](https://tools.ietf.org/html/rfc7515)
+with [Detached Content](https://tools.ietf.org/html/rfc7515#appendix-F).
+The payload of the JWS is the raw data of the attachment, whether externally referenced
+or encoded in base64 format, and is not contained within the signature itself.
+Signatures over inlined JSON attachments are not currently defined as this
+depends upon a canonical serialization for the data.
+
+Sample JWS-signed attachment:
+
+```jsonc
+{
+  "@type": "https://didcomm.org/xhomebuy/1.0/home_insp",
+  "inspection_date": "2020-03-25",
+  "inspection_address": "123 Villa de Las Fuentes, Toledo, Spain",
+  "comment": "Here's that report you asked for.",
+  "report~attach": {
+    "mime-type": "application/pdf",
+    "filename": "Garcia-inspection-March-25.pdf",
+    "data": {
+      "base64": "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ... (bytes omitted to shorten)",
+      "jws": {
+        // payload: ...,  <-- omitted: refer to base64 content when validating
+        "header": {
+          "kid": "did:key:z6MkmjY8GnV5i9YTDtPETC2uUAW6ejw3nk5mXF5yci5ab7th"
+        },
+        "protected": "eyJhbGciOiJFZERTQSIsImlhdCI6MTU4Mzg4... (bytes omitted)",
+        "signature": "3dZWsuru7QAVFUCtTd0s7uc1peYEijx4eyt5... (bytes omitted)"
+      }
+    }
+  }
+}
+```
+
+Here, the JWS structure inlines a public key value in
+[did:key format](../../features/0360-use-did-key/README.md) within the unprotected header's
+`kid` field. It may also use a DID URL to reference a key within a resolvable DIDDoc.
+Supported DID URLs should specify a timestamp and/or version for the containing
+document.
+
+The JWS protected header consists of at least the following parameter indicating
+an Edwards curve digital signature:
+
+```jsonc
+{
+  "alg": "EdDSA"
+}
+```
+
+Additional protected and unprotected header parameters may be included in the JWS
+and must be ignored by implementations if not specifically supported. Any registered
+header parameters defined by the JWS RFC must be used according to the specification
+if present.
+
+Multiple signatures may be included using the JWS General Serialization syntax. When a
+single signature is present, the Flattened Serialization syntax should be preferred.
+Because each JWS contains an unprotected header with the signing key information, the
+JWS Compact Serialization cannot be supported.
+
 ### Size Considerations
 
 DIDComm messages should be small, as a general rule. Just as it's a bad
@@ -421,6 +485,8 @@ in time, bandwidth, and storage, to fully fetch the attachment.
 * `data`: A JSON object that gives access to the actual content of the
 attachment. Contains the following subfields:
 
+  * `jws`: A JSON Web Signature over the content of the attachment. Optional.
+
   * `sha256`: The hash of the content. Optional. Used as an integrity check if
   content is inlined. if content is only referenced, then including this field
   makes the content tamper-evident. This may be redundant, if the content is
@@ -430,13 +496,14 @@ attachment. Contains the following subfields:
   link is a form of proof of existence.
 
   * `links`: A list of zero or more locations at which the content may be fetched.
-  
+  Optional.
+
   * `base64`: Base64-encoded data, when representing arbitrary content inline instead
-  of via `links`. Optional. 
-  
+  of via `links`. Optional.
+
   * `json`: Directly embedded JSON data, when representing content inline instead of
-  via `links`, and when the content is natively conveyable as JSON. Optional. 
-  
+  via `links`, and when the content is natively conveyable as JSON. Optional.
+
 
 ## Drawbacks
 
@@ -474,4 +541,4 @@ The following lists the implementations (if any) of this RFC. Please do a pull r
 Name / Link | Implementation Notes
 --- | ---
 [Aries Cloud Agent - Python](https://github.com/hyperledger/aries-cloudagent-python) | in credential exchange
-
+[Streetcred.id](https://streetcred.id/) | Commercial mobile and web app built using Aries Framework - .NET
diff --git a/concepts/0017-attachments/connection-request.json b/concepts/0017-attachments/connection-request.json
deleted file mode 100644
index c3e93af..0000000
--- a/concepts/0017-attachments/connection-request.json
+++ /dev/null
@@ -1,12 +0,0 @@
-{
-  "@id": "5678876542345",
-  "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request",
-  "label": "Bob",
-  "connection": {
-    "did": "B.did@B:A",
-    "did_doc": {
-      "@context": "https://w3id.org/did/v1",
-      // rest of DID Doc contents here.
-    }
-  }
-}
diff --git a/concepts/0017-attachments/inlined.png b/concepts/0017-attachments/inlined.png
index 1968bf3..68d63cf 100644
Binary files a/concepts/0017-attachments/inlined.png and b/concepts/0017-attachments/inlined.png differ
diff --git a/concepts/0017-attachments/rendezvous.json b/concepts/0017-attachments/rendezvous.json
new file mode 100644
index 0000000..57b810f
--- /dev/null
+++ b/concepts/0017-attachments/rendezvous.json
@@ -0,0 +1,14 @@
+{
+  "@id": "5678876542345",
+  "@type": "https://didcomm.org/xrendezvous/1.0/request",
+  "comment": "Shall we discuss the merger?",
+  "candidate_locations": [
+    {
+      "name": "Rixos The Palm Dubai",
+      "position": [
+        25.1212,
+        55.1535
+      ]
+    }
+  ]
+}

>>>>>>>> Changed protocol: concepts/0020-message-types, latest commit to protocol: 745f8d0644a30034fb77aaf8e3d78b75c2c17594

diff --git a/concepts/0020-message-types/README.md b/concepts/0020-message-types/README.md
index 289b813..5ffd13f 100644
--- a/concepts/0020-message-types/README.md
+++ b/concepts/0020-message-types/README.md
@@ -1,6 +1,6 @@
 # Aries RFC 0020: Message Types
 
-- Authors: [Daniel Bluhm](daniel.bluhm@sovrin.org), [Sam Curren](sam@sovrin.org)
+- Authors: Daniel Bluhm, Sam Curren
 - Status: [ACCEPTED](/README.md#accepted)
 - Since: 2019-05-24
 - Status Note:  
@@ -22,133 +22,24 @@ A "Message Type" is a required attribute of all communications sent between part
 
 Types are specified within a message using the `@type` attribute:
 
-```json
+```jsonc
 {
-    `@type`:<message type string>,
+    "@type": "<message type string>",
     // other attributes
 }
 ```
 
-Message types are URIs that resolve to developer documentation for the message type, as described in [Protocol URIs](../0003-protocols/uris.md).
-
-We recommend that message types are ledger resolvable DIDs with an endpoint specifier and path. This allows for the document locations to be updated to a new location for a stable definition.
-
-### Example DID and DID Document for Message Type Specification
-
-The following was taken from a presentation by Drummond Reed during the Agent Summit. A link to this presentation can be found below in the [Reference](#reference) section.
-
-#### Problem
-
-How to use a DID to identify a digital object that:
-
-1. Can be widely referenced.
-2. Is cryptographically verifiable.
-3. Is human readable *enough* for developers.
-
-#### Solution
-
-Use a full DID reference that contains a service name and path.
-
-##### Example DID Reference
-
-This DID reference contains a service name (`;spec`) followed by a path that expresses the semantics of an example protocol.
-
-```
-did:sov:123456789abcdefghi1234;spec/exampleprotocol/1.0/exampletype
-```
-
-#### Example DID Document
-
-This example DID document shows a service endpoint that includes a name property (emphasized) whose purpose is to enable creation of DID references that can deterministically select that service in order to have an algorithmic transformation into a concrete URI.
-
-```json
-{
-  "@context": "https://w3id.org/did/v1",
-  "id": "did:example:123456789abcdefghi",
-  "publicKey": [{
-    "id": "did:example:123456789abcdefghi#keys-1",
-    "type": "RsaSigningKey2018",
-    "owner": "did:example:123456789abcdefghi",
-    "publicKeyPem": "-----BEGIN PUBLIC KEY...END PUBLIC KEY-----\r\n"
-  }],
-  "authentication": [{
-    "type": "RsaSignatureAuthentication2018",
-    "publicKey": "did:example:123456789abcdefghi#keys-1"
-  }],
-  "service": [{
-    "type": "Document",
-    "name": "spec", // <--- Name property
-    "serviceEndpoint": "https://sovrin.org/specs/"
-  }]
-}
-```
-
-#### Resolution Process
-
-This is the full ABNF for a DID:
-
-```ABNF
-  did-reference      = did [ ";" did-service ] [ "/" did-path ] [ "?" did-query ]
-                     [ "#" did-frag ]
-  did                = "did:" method ":" specific-idstring
-  method             = 1*namechar
-  namechar           = %x61-7A / DIGIT
-  specific-idstring  = idstring *( ":" idstring )
-  idstring           = 1*idchar
-  idchar             = ALPHA / DIGIT / "." / "-"
-  did-service        = 1*servchar *( ";" 1*servchar )
-  servchar           = idchar / "=" / "&"
-```
-
-The purpose of the `did-service` component that may optionally follow a DID is to enable construction of a DID reference that may be algorithmically transformed into a concrete URL to access the target resource. There are two algorithms for this transformation. Both begin with the same first step:
-
-1. Extract the DID plus the `did-service` component from the DID reference. Call this the *DID service locator*. Call the rest of the DID reference the `service-specific` string.
-
-#### Service Selection by ID
-
-This algorithm MUST be used if the `did-service` component does NOT begin with the string `type=`.
-
-2. Select the first `service` object whose id property contains an exact match to the DID service locator.
-3. Select the `serviceEndpoint` property of the selected `service` object.
-4. Extract the value of the `serviceEndpoint` property. Call this the *endpoint URL*.
-5. Append the service-specific string to the endpoint URL.
-6. The final result is the concrete URL.
-
-##### Example
-
-The following agent message is received with a type not known to the developer:
-
-```json
-{
-    '@type': 'did:sov:123456789abcdefghi1234;spec/exampleprotocol/1.0/exampletype',
-    'attr_a': 5,
-    'attr_b': 'Gouda'
-}
-```
-
-The `@type` is extracted, with a DID reference that resolves to the example `service` block above:
-
-``` json
-did:sov:123456789abcdefghi1234;spec/exampleprotocol/1.0/exampletype
-```
-
-A DID resolver would algorithmically transform that DID reference to the following concrete URL:
-
-```
-https://sovrin.org/specs/exampleprotocol/1.0/exampletype
-```
-
-The developer would then be able to load this URL in a browser to discover the meaning of `attr_a` and `attr_b`.
+Message types are URIs that may resolve to developer documentation for the message type, as described in [Protocol URIs](../0003-protocols/README.md#message-type-and-protocol-identifier-uris). We recommend that message type URIs be HTTP URLs.
 
 ### Aries Core Message Namespace
 
-`did:sov:BzCbsNYhMrjHiqZDTUASHg` will be used to namespace protocols defined by the community as "core protocols" or protocols that agents should minimally support.
+`https://didcomm.org/` is used to namespace protocols defined by the community as "core protocols" or protocols that agents should minimally support.
 
-This DID is currently held by Daniel Hardman. Ownership will be transferred to the correct entity as soon as possible.
+The `didcomm.org` [DNS entry](https://whois.whoisxmlapi.com/lookup-report/zjRXrYwV5r) is currently controlled by the [Decentralized Identity Foundation (DIF)](https://identity.foundation) based on their role in standardizing the [DIDComm Messaging specification](https://identity.foundation/didcomm-messaging/spec/).
 
 ### Protocols
 
-Protocols provide a logical grouping for message types. These protocols, along with each type belonging to that protocol, are to be defined in future HIPEs or through means appropriate to subprojects.
+Protocols provide a logical grouping for message types. These protocols, along with each type belonging to that protocol, are to be defined in future RFCs or through means appropriate to subprojects.
 
 #### Protocol Versioning
 
@@ -159,29 +50,29 @@ number. To summarize, a change in the major protocol version number indicates a
 
 These guidelines are guidelines on purpose. There will be situations where a good design will have to choose between conflicting points, or ignore all of them. The goal should always be clear and good design.
 
-#### Respect Reserved Attribute Names
+### Respect Reserved Attribute Names
 
 Reserved attributes are prefixed with an `@` sign, such as `@type`. Don't use this prefix for an attribute, even if use of that specific attribute is undefined.
 
-#### Avoid ambiguous attribute names
+### Avoid ambiguous attribute names
 
 Data, id, and package, are often terrible names. Adjust the name to enhance meaning. For example, use  `message_id` instead of `id`.
 
-#### Avoid names with special characters
+### Avoid names with special characters
 
 Technically, attribute names can be any valid json key (except prefixed with @, as mentioned above). Practically, you should avoid using special characters, including those that need to be escaped. Underscores and dashes [_,-] are totally acceptable, but you should avoid quotation marks, punctuation, and other symbols.
 
-#### Use attributes consistently within a protocol
+### Use attributes consistently within a protocol
 
 Be consistent with attribute names between the different types within a protocol. Only use the same attribute name for the same data. If the attribute values are similar, but not exactly the same, adjust the name to indicate the difference.
 
-#### Nest Attributes only when useful
+### Nest Attributes only when useful
 
-Attributes do not need to be nested under a top level attribute, but can be to organize related attributes. Nesting all message attributes under one top level attribute is not usually a good idea.
+Attributes do not need to be nested under a top level attribute, but can be to organize related attributes. Nesting all message attributes under one top level attribute is usually not a good idea.
 
 ### Design Examples
 
-**Example 1**
+#### Example 1
 
 ```json
 {
@@ -197,7 +88,7 @@ Attributes do not need to be nested under a top level attribute, but can be to o
 
 Suggestions: Ambiguous names, unnecessary nesting, symbols in names.
 
-**Example 1 Fixed**
+#### Example 1 Fixed
 
 ```json
 {
@@ -209,16 +100,12 @@ Suggestions: Ambiguous names, unnecessary nesting, symbols in names.
 }
 ```
 
-
-
 ## Reference
 
-- [Drummond Reed's presentation on using DIDs as message type specifiers](https://docs.google.com/document/d/1t-AsCPjvERBZq9l-iXn2xffJwlNfFoQhktfIaMFjN-c/edit#heading=h.x1wbqftasrx2)
 - [Daniel Hardman's Agent Summit Notes](https://docs.google.com/document/d/1TP_7MKfuIrlY3rz4cz_tuuCFi7hdUWifeKwr5h-QTYM/edit)
 - [Stephen Curran's presentation summarizing the Agent Summit](https://docs.google.com/presentation/d/1l-po2IKVhXZHKlgpLba2RGq0Md9Rf19lDLEXMKwLdco/edit)
-- [DID Spec](https://w3c-ccg.github.io/did-spec/)
-- [Semantic Versioning](../0003-protocols/semver.md)
-- [Core Message Structure](https://github.com/hyperledger/indy-hipe/pull/17)
+- [Semantic Versioning](../0003-protocols/README.md#semver-rules-for-protocols)
+- [DIDComm Message Anatomy](../0021-didcomm-message-anatomy/README.md)
 
 ## Implementations
 

>>>>>>>> Changed protocol: concepts/0046-mediators-and-relays, latest commit to protocol: 720bdab50e2d0437fda03028c1b17c69781bdd69

diff --git a/concepts/0046-mediators-and-relays/README.md b/concepts/0046-mediators-and-relays/README.md
index ed7a408..fe7f389 100644
--- a/concepts/0046-mediators-and-relays/README.md
+++ b/concepts/0046-mediators-and-relays/README.md
@@ -19,7 +19,7 @@ deliver messages only after decrypting an outer envelope to reveal
 a `forward` request. Many types of mediators may exist, but two important
 ones should be widely understood, as they commonly manifest in DID Docs:
 
-1. A service that hosts many cloud agents a single endpoint to provide herd
+1. A service that hosts many cloud agents at a single endpoint to provide herd
 privacy (an "agency") is a _mediator_.
 2. A cloud-based agent that routes between/among the edges of a sovereign
 domain is a _mediator_.

>>>>>>>> Changed protocol: concepts/0047-json-ld-compatibility, latest commit to protocol: 1e9439c2db6b8f78f63dbcda9c9a008923e8e084

diff --git a/concepts/0047-json-ld-compatibility/README.md b/concepts/0047-json-ld-compatibility/README.md
index cc6e52d..4c3961f 100644
--- a/concepts/0047-json-ld-compatibility/README.md
+++ b/concepts/0047-json-ld-compatibility/README.md
@@ -1,4 +1,4 @@
-# Aries RFC 0035: JSON-LD Compatibility
+# Aries RFC 0047: JSON-LD Compatibility
 
 - Authors: [Daniel Hardman](daniel.hardman@gmail.com)
 - Status: [ACCEPTED](/README.md#accepted)
@@ -11,7 +11,7 @@
 ## Summary
 
 Explains the goals of DID Communication with respect to JSON-LD,
-and how Indy proposes to accomplish them.
+and how Aries proposes to accomplish them.
 
 ## Motivation
 
@@ -96,7 +96,7 @@ understanding follows.
 
 #### `@type`
 
-The type of an DIDComm message, and its associated route or handler in dispatching code,
+The type of a DIDComm message, and its associated route or handler in dispatching code,
 is given by the JSON-LD `@type` property at the root of a message.
 [JSON-LD requires this value to be an IRI](https://w3c.github.io/json-ld-syntax/#typed-values).
 DIDComm DID references are [fully compliant](https://w3c-ccg.github.io/did-spec/#paths).
@@ -105,7 +105,7 @@ but no predefined relevance in DIDComm.
 
 #### `@id`
 
-The identifier for an DIDComm message is given by the JSON-LD `@id` property at the
+The identifier for a DIDComm message is given by the JSON-LD `@id` property at the
 root of a message. [JSON-LD requires this value to be an IRI](https://w3c.github.io/json-ld-syntax/#specifying-the-type).
 DIDComm message IDs are relative IRIs, and can be converted to absolute form as described in [RFC 0217: Linkable Message Paths](../0217-linkable-message-paths/README.md). Instances of `@id` on any node other than a message root
 have JSON-LD meaning, but no predefined relevance in DIDComm.
@@ -125,7 +125,7 @@ which focuses on how ordinary JSON can be intepreted as JSON-LD by communicating
 DIDComm messages communicate the context out of band by specifying it in the
 protocol definition (e.g., RFC) for the associated message type; thus, the
 value of `@type` indirectly gives the relevant `@context`. In advanced use cases,
-`@context` may appear in an DIDComm message, supplementing this behavior.
+`@context` may appear in a DIDComm message, supplementing this behavior.
 
 #### Ordering
 
@@ -157,7 +157,7 @@ is automatically imputed to every DIDComm message:
 
 ```JSON
 "@context": {
-  "@vocab": "https://github.com/hyperledger/aries-rfc/"
+  "@vocab": "https://github.com/hyperledger/aries-rfcs/"
 }
 ```
 
@@ -175,7 +175,7 @@ sophistication and library dependencies.
 
 The DIDComm community is not opposed to using LD Signatures for problems that
 need them, but has decided not to adopt the mechanism across the board.
-There is [another signing mechanism](https://github.com/hyperledger/indy-hipe/pull/79)
+There is [another signing mechanism](../../features/0234-signature-decorator/README.md)
 that is far simpler, and adequate for many scenarios. We’ll use whichever
 scheme is best suited to circumstances.
 
@@ -190,8 +190,8 @@ However, it is available on a message-type-definition basis (not ad hoc).
 
 #### Node References
 
-JSON-LD lets one field reference another. See [example 67](
- https://w3c.github.io/json-ld-syntax/#ex-67-referencing-node-objects) (note
+JSON-LD lets one field reference another. See [example 93](
+ https://w3c.github.io/json-ld-syntax/#example-93-referencing-node-objects) (note
  that the ref could have just been “#me” instead of the fully qualified IRI).
  We may need this construct at some point in DIDComm, but it is not in active
  use yet.

>>>>>>>> Changed protocol: concepts/0094-cross-domain-messaging, latest commit to protocol: 6509b84abaf5760a8ba1744c8078d513f28456db

diff --git a/concepts/0094-cross-domain-messaging/README.md b/concepts/0094-cross-domain-messaging/README.md
index 11ef1f5..c975c9c 100644
--- a/concepts/0094-cross-domain-messaging/README.md
+++ b/concepts/0094-cross-domain-messaging/README.md
@@ -71,7 +71,7 @@ The term "DIDDoc" is used in this RFC as it is defined in the [DID Specification
 - associated with a DID, and
 - used for a relationship.
 
-A DID can be resolved to get its corresponding DIDDoc by any Agent that needs access to the DIDDoc. This is true whether talking about a DID on a Public Ledger, or a pairwise DID (using the [did:peer method](https://dhh1128.github.io/peer-did-method-spec/index.html)) persisted only to the parties of the relationship. In the case of pairwise DIDs, it's the (implementation specific) domain's responsibility to ensure such resolution is available to all Agents requiring it within the domain.
+A DID can be resolved to get its corresponding DIDDoc by any Agent that needs access to the DIDDoc. This is true whether talking about a DID on a Public Ledger, or a pairwise DID (using the [did:peer method](https://identity.foundation/peer-did-method-spec/index.html)) persisted only to the parties of the relationship. In the case of pairwise DIDs, it's the (implementation specific) domain's responsibility to ensure such resolution is available to all Agents requiring it within the domain.
 
 #### Messages are Private
 
@@ -175,7 +175,7 @@ If there are mediators specified in the DID service endpoint for the Receiver ag
 
 ```json
 {
-  "@type" : "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/routing/1.0/forward",
+  "@type" : "https://didcomm.org/routing/1.0/forward",
   "@id": "54ad1a63-29bd-4a59-abed-1c5b1026e6fd",
   "to"   : "did:sov:1234abcd#4",
   "msg"  : { json object from <pack(AgentMessage,valueOf(did:sov:1234abcd#4), privKey(A.did@A:B#1))> }
@@ -245,7 +245,7 @@ The core message type "forward", version 1.0 of the "routing" family is defined
 
 ```json
 {
-  "@type" : "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/routing/1.0/forward",
+  "@type" : "https://didcomm.org/routing/1.0/forward",
   "@id": "54ad1a63-29bd-4a59-abed-1c5b1026e6fd",
   "to"   : "did:sov:1234abcd#4",
   "msg"  : { json object from <pack(AgentMessage,valueOf(did:sov:1234abcd#4), privKey(A.did@A:B#1))> }

>>>>>>>> Changed protocol: features/0015-acks, latest commit to protocol: 6509b84abaf5760a8ba1744c8078d513f28456db

diff --git a/features/0015-acks/README.md b/features/0015-acks/README.md
index 40f1a03..0c24a48 100644
--- a/features/0015-acks/README.md
+++ b/features/0015-acks/README.md
@@ -13,6 +13,10 @@
 Explains how one party can send acknowledgment
 messages (ACKs) to confirm receipt and clarify the status of complex processes.
 
+## Change log
+
+- Mar 25, 2020: In the ~thread decorator section of the sample in the [Explicit ACKs section](#explicit-acks), 'myindex' was changed to 'sender_order' and 'lrecs' to 'received_orders'. This is in accordance with the field names as defined in [RFC 0008](https://github.com/hyperledger/aries-rfcs/tree/64e5e55c123b2efaf38f4b0911a71a1c40a7f29d/concepts/0008-message-id-and-threading#threaded-messages).
+
 ## Motivation
 
 An __acknowledgment__ or __ACK__ is one of the most common procedures in protocols
@@ -68,13 +72,13 @@ this:
 
 ``` jsonc
 {
-  "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/notification/1.0/ack",
+  "@type": "https://didcomm.org/notification/1.0/ack",
   "@id": "06d474e0-20d3-4cbf-bea6-6ba7e1891240",
   "status": "OK",
   "~thread": {
     "thid": "b271c889-a306-4737-81e6-6b2f2f8062ae",
-    "myindex": 4,
-    "lrecs": {"2fQvCXfgvxz4dtBDDwcj2PJdG5qDrEsrQVjvWRhg9uhd": 3}
+    "sender_order": 4,
+    "received_orders": {"did:sov:abcxyz": 3}
   }
 }
 ```
@@ -85,11 +89,11 @@ It may also be appropriate to send an ack at other key points in an interaction
 ### Adopting acks
 
 As discussed in [0003: Protocols](../../concepts/0003-protocols/README.md), a protocol can [adopt the ack message into
-its own namespace](../../concepts/0003-protocols/template.md#adopted-messages).
+its own namespace](../../0000-template-protocol.md#adopted-messages).
 This allows the type of an ack to change from:
-    `did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/notification/1.0/ack`
+    `https://didcomm.org/notification/1.0/ack`
 to something like:
-    `did:sov:protocolOwnersDID;spec/otherProtocol/2.0/ack`.
+    `https://didcomm.org/otherProtocol/2.0/ack`.
 Thus, message routing
 logic can see the ack as part of the other protocol, and send it to the relevant
 handler--but still have all the standardization of generic acks.
@@ -166,7 +170,7 @@ None identified.
 
 ## Prior art
 
-See notes above about the [implicit ACK mechanism in `~thread.lrecs`](#implicit-acks).
+See notes above about the [implicit ACK mechanism in `~thread.received_orders`](#implicit-acks).
 
 ## Unresolved questions
 
@@ -178,7 +182,7 @@ The following lists the implementations (if any) of this RFC. Please do a pull r
 
 Name / Link | Implementation Notes
 --- | ---
-[RFC 0036: Issue Credential Protocol](../0036-issue-credential/README.md) | ACKs are [adopted](../../concepts/0003-protocols/template.md#adopted-messages) by this protocol.
-[RFC 0037: Present Proof Protocol](../0037-present-proof/README.md) | ACKs are [adopted](../../concepts/0003-protocols/template.md#adopted-messages) by this protocol.
-[RFC 0193: Coin Flip Protocol](../0193-coin-flip/README.md) | ACKs are [adopted](../../concepts/0003-protocols/template.md#adopted-messages) as a subprotocol.
-[Aries Cloud Agent - Python](https://github.com/hyperledger/aries-cloudagent-python) | Contributed by the Government of British Columbia.
\ No newline at end of file
+[RFC 0036: Issue Credential Protocol](../0036-issue-credential/README.md) | ACKs are [adopted](../../0000-template-protocol.md#adopted-messages) by this protocol.
+[RFC 0037: Present Proof Protocol](../0037-present-proof/README.md) | ACKs are [adopted](../../0000-template-protocol.md#adopted-messages) by this protocol.
+[RFC 0193: Coin Flip Protocol](../0193-coin-flip/README.md) | ACKs are [adopted](../../0000-template-protocol.md#adopted-messages) as a subprotocol.
+[Aries Cloud Agent - Python](https://github.com/hyperledger/aries-cloudagent-python) | Contributed by the Government of British Columbia.

>>>>>>>> Changed protocol: features/0019-encryption-envelope, latest commit to protocol: f256ab07a23df65b3f5a0e56fcad0e9e55d57e33

diff --git a/features/0019-encryption-envelope/README.md b/features/0019-encryption-envelope/README.md
index ad8c541..3eee1b0 100644
--- a/features/0019-encryption-envelope/README.md
+++ b/features/0019-encryption-envelope/README.md
@@ -10,13 +10,13 @@
 
 ## Summary
 
-There are two layers of messages that combine to enable **interoperable** self-sovereign agent-to-agent communication. At the highest level are [Agent Plaintext Messages](https://github.com/hyperledger/indy-hipe/tree/master/text/0026-agent-file-format#agent-plaintext-messages-ap) - messages sent between identities to accomplish some shared goal (e.g., establishing a connection, issuing a verifiable credential, sharing a chat). Agent Plaintext Messages are delivered via the second, lower layer of messaging - Wire. An [Agent Wire Message](https://github.com/hyperledger/indy-hipe/tree/master/text/0026-agent-file-format#agent-wire-messages-aw) is a wrapper (envelope) around a plaintext message to permit secure sending and routing. A plaintext message going from its sender to its receiver passes through many agents, and a wire message envelope is used for each hop of the journey.
+There are two layers of messages that combine to enable **interoperable** self-sovereign agent-to-agent communication. At the highest level are [DIDComm Plaintext Messages](../0044-didcomm-file-and-mime-types/README.md#didcomm-v1-messages-dm) - messages sent between identities to accomplish some shared goal (e.g., establishing a connection, issuing a verifiable credential, sharing a chat). DIDComm Plaintext Messages are delivered via the second, lower layer of messaging - DIDComm Encrypted Envelopes. A [DIDComm Encrypted Envelope](../0044-didcomm-file-and-mime-types/README.md#didcomm-v1-encrypted-envelope-dee) is a wrapper (envelope) around a plaintext message to permit secure sending and routing. A plaintext message going from its sender to its receiver passes through many agents, and an encryption envelope is used for each hop of the journey.
 
-This HIPE describes the wire format and the functions in Aries SDK that implement it.
+This RFC describes the DIDComm Encrypted Envelope format and the `pack()` and `unpack()` functions that implement this format.
 
 # Motivation
 
-Wire messages use a standard format built on [JSON Web Encryption - RFC 7516](
+Encryption envelopes use a standard format built on [JSON Web Encryption - RFC 7516](
 https://tools.ietf.org/html/rfc7516). This format is not captive to Aries; it requires
 no special Aries worldview or Aries dependencies to implement. Rather, it is a
 general-purpose solution to the question of how to encrypt, decrypt, and route
@@ -24,8 +24,8 @@ messages as they pass over any transport(s). By documenting the format here, we
 hope to provide a point of interoperability for developers of agents inside and
 outside the Aries ecosystem.
 
-We also document how Aries SDK implements its support for wire format through the
-`pack()` and `unpack()` functions. For developers of Aries SDK, this is a sort of
+We also document how Aries implements its support for the DIDComm Encrypted Envelope format through the
+`pack()` and `unpack()` functions. For developers of Aries, this is a sort of
 design doc; for those who want to implement the format in other tech stacks, it
 may be a useful reference.
 
@@ -44,7 +44,7 @@ The assumptions can be made because either the message is being sent to an agent
 
 ## Example Scenario
 
-The example of Alice and Bob's [sovereign domains](https://docs.google.com/document/d/1gfIz5TT0cNp2kxGMLFXr19x1uoZsruUe_0glHst2fZ8/edit#heading=h.pufsrf9ucjvv) is used for illustrative purposes in defining this HIPE.
+The example of Alice and Bob's [sovereign domains](https://docs.google.com/document/d/1gfIz5TT0cNp2kxGMLFXr19x1uoZsruUe_0glHst2fZ8/edit#heading=h.pufsrf9ucjvv) is used for illustrative purposes in defining this RFC.
 
 ![Example Domains: Alice and Bob](domains.jpg)
 
@@ -60,26 +60,26 @@ In the diagram above:
   - 1 Routing agent - "3"
   - 1 Domain Endpoint - "9"
 
-For the purposes of this discussion we are defining the Wire Message agent message flow to be:
+For the purposes of this discussion we are defining the Encryption Envelope agent message flow to be:
 
 > 1 --> 2 --> 8 --> 9 --> 3 --> 4
 
 However, that flow is just one of several that could match this configuration. What we know for sure is that:
 
 - 1 is the Sender agent in this case and so must send the first or original message.
-- 9 is the Domain Endpoint of Bob's domain and so must receive the message as a wire message
+- 9 is the Domain Endpoint of Bob's domain and so must receive the message as an Encrypted Envelope.
 - 4 is the Receiver in this case and so must receive (and should be able to read) the first or original message.
 
-## Wire Messages
+## Encrypted Envelopes
 
-A wire wessage is used to transport any plaintext message from one agent directly to another. In our example message flow above, there are five wire messages sent, one for each hop in the flow. The process to send a wire message consists of the following steps:
+An encrypted envelope is used to transport any plaintext message from one agent directly to another. In our example message flow above, there are five encrypted envelopes sent, one for each hop in the flow. The process to send an encrypted envelope consists of the following steps:
 
-- Call the standard function `pack()` (implemented in the Aries-SDK) to wrap the plaintext message
-- Send the wire message using the transport protocol defined by the receiving endpoint
-- Receive the wire message
-- Call the standard function `unpack()` to retrieve the plaintext message (and possibly its provenance) from the wire message
+- Call the standard function `pack()` to wrap the plaintext message
+- Send the encrypted envelope using the transport protocol defined by the receiving endpoint
+- Receive the encrypted envelope
+- Call the standard function `unpack()` to retrieve the plaintext message (and possibly its provenance) from the encrypted envelope
 
-This is repeated with each hop, but the wire messages are nested, such that the plaintext is never visible until
+This is repeated with each hop, but the encrypted envelopes are nested, such that the plaintext is never visible until
 it reaches its final recipient.
 
 ## Implementation
@@ -97,8 +97,8 @@ in a formal [schema](schema.md).
 When packing and unpacking are done in a way that the sender is anonymous,
 we say that we are in __anoncrypt mode__. When the sender is revealed, we
 are in __authcrypt mode__. Authcrypt mode reveals the sender *to the recipient
-only*; it is not the same as a non-repudiable signature. See the [HIPE about
-signing](https://github.com/hyperledger/indy-hipe/pull/79), and [this
+only*; it is not the same as a non-repudiable signature. See the [RFC about
+non-repudiable signatures](../0066-non-repudiable-cryptographic-envelope/README.md), and [this
 discussion about the theory of non-repudiation](https://github.com/sovrin-foundation/protocol/blob/d1039cd793a801abdc5fdfdc25ef071778039075/janus/repudiation.md).
 
 ### Pack Message
@@ -110,7 +110,7 @@ packed_message = pack_message(wallet_handle, message, receiver_verkeys, sender_v
 #### pack_message() Params:
 
 - wallet_handle: handle to the wallet that contains the sender's secrets.
-- message: the message (plaintext, or nested wire message) as a string. If it's JSON object it should be in string format first
+- message: the message (plaintext, or nested encrypted envelope) as a string. If it's JSON object it should be in string format first
 - receiver_verkeys: a list of recipient verkeys as string containing a JSON array
 - sender_verkey: the sender's verkey as a string. This verkey is used to look up the sender's private key so the wallet can put supply it as input to the encryption algorithm. When an empty string ("") is passed in this parameter, anoncrypt mode is used
 
@@ -304,7 +304,7 @@ For a reference unpack implementation, see https://github.com/hyperledger/indy-s
 
 ```json
 {
-    "message": "{ \"@id\": \"123456780\",\"@type\":\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/basicmessage/1.0/message\",\"sent_time\": \"2019-01-15 18:42:01Z\",\"content\": \"Your hovercraft is full of eels.\"}",
+    "message": "{ \"@id\": \"123456780\",\"@type\":\"https://didcomm.org/basicmessage/1.0/message\",\"sent_time\": \"2019-01-15 18:42:01Z\",\"content\": \"Your hovercraft is full of eels.\"}",
     "recipient_verkey": "HKTAiYM8cE2kKC9KaNMZLYj4GS8uWCYMBxP2i1Y92zum",
     "sender_verkey": "DWwLsbKCRAbYtfYnQNmzfKV7ofVhMBi6T4o3d2SCxVuX"
 }
@@ -314,7 +314,7 @@ For a reference unpack implementation, see https://github.com/hyperledger/indy-s
 
 ```json
 {
-    "message": "{ \"@id\": \"123456780\",\"@type\":\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/basicmessage/1.0/message\",\"sent_time\": \"2019-01-15 18:42:01Z\",\"content\": \"Your hovercraft is full of eels.\"}",
+    "message": "{ \"@id\": \"123456780\",\"@type\":\"https://didcomm.org/basicmessage/1.0/message\",\"sent_time\": \"2019-01-15 18:42:01Z\",\"content\": \"Your hovercraft is full of eels.\"}",
     "recipient_verkey": "2GXmuCN2JCxSqMRVftBHLxVJKSL5bXyzM8DsPzGqQoNj"
 }
 ```
@@ -343,12 +343,12 @@ The [JWE](https://tools.ietf.org/html/rfc7516) family of encryption methods.
 
 # Unresolved questions
 
-- How transport protocols (https, zmq, etc.) will be be used to send Wire Messages?
-    - These will need to be defined using seperate HIPEs. For example, HTTP might POST a message and place it in the body of the HTTP POST.
-- How will the wire messages work with routing tables to pass a message through a domain, potentially over various transport protocols?
-    - There's not much certainty whether routing tables or some other mechanism will be used. This needs to be defined in another HIPE.
-- If the wire protocol fails, how is that failure passed back to those involved in the transmission?
-    - This should be handled using the error-reporting mechanism which is currently proposed HIPE #65 by Stephen Curran.
+- How transport protocols (https, zmq, etc.) will be be used to send Encrypted Envelopes?
+    - These will need to be defined using separate RFCs. For example, HTTP might POST a message and place it in the body of the HTTP POST.
+- How will the encrypted envelopes work with routing tables to pass a message through a domain, potentially over various transport protocols?
+    - There's not much certainty whether routing tables or some other mechanism will be used. This needs to be defined in another RFC.
+- If the encryption envelope protocol fails, how is that failure passed back to those involved in the transmission?
+    - This should be handled using the [Report Problem Protocol](../0035-report-problem/README.md) which is currently demonstrated RFC #35 by Stephen Curran.
 
 ## Implementations
 

>>>>>>>> Changed protocol: features/0160-connection-protocol, latest commit to protocol: 6509b84abaf5760a8ba1744c8078d513f28456db

diff --git a/features/0160-connection-protocol/README.md b/features/0160-connection-protocol/README.md
index 71dcf4c..0eed6dc 100644
--- a/features/0160-connection-protocol/README.md
+++ b/features/0160-connection-protocol/README.md
@@ -79,7 +79,7 @@ No errors are sent in timeout situations. If the inviter or invitee wishes to re
 
 ```jsonc
 {
-  "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/problem_report",
+  "@type": "https://didcomm.org/connections/1.0/problem_report",
   "@id": "5678876542345",
   "~thread": { "thid": "<@id of message related to problem>" },
   "~i10n": { "locale": "en"},
@@ -135,7 +135,7 @@ Invitation Message with Public Invitation DID:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation",
+    "@type": "https://didcomm.org/connections/1.0/invitation",
     "@id": "12345678900987654321",
     "label": "Alice",
     "did": "did:sov:QmWbsNYhMrjHiqZDTUTEJs"
@@ -146,7 +146,7 @@ Invitation Message with Keys and URL endpoint:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation",
+    "@type": "https://didcomm.org/connections/1.0/invitation",
     "@id": "12345678900987654321",
     "label": "Alice",
     "recipientKeys": ["8HH5gYEeNc3z7PYXmd54d4x6qAfCNrqQqEB3nS7Zfu7K"],
@@ -159,7 +159,7 @@ Invitation Message with Keys and DID Service Endpoint Reference:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation",
+    "@type": "https://didcomm.org/connections/1.0/invitation",
     "label": "Alice",
     "recipientKeys": ["8HH5gYEeNc3z7PYXmd54d4x6qAfCNrqQqEB3nS7Zfu7K"],
     "serviceEndpoint": "did:sov:A2wBhNYhMrjHiqZDTUYH7u;routeid",
@@ -209,7 +209,7 @@ Invitation:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation",
+    "@type": "https://didcomm.org/connections/1.0/invitation",
     "@id": "12345678900987654321",
     "label": "Alice",
     "recipientKeys": ["8HH5gYEeNc3z7PYXmd54d4x6qAfCNrqQqEB3nS7Zfu7K"],
@@ -267,7 +267,7 @@ The _invitee_ will provision a new DID according to the DID method spec. For a P
 ```jsonc
 {
   "@id": "5678876542345",
-  "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/request",
+  "@type": "https://didcomm.org/connections/1.0/request",
   "label": "Bob",
   "connection": {
     "DID": "B.did@B:A",
@@ -371,7 +371,7 @@ The connection response message is used to complete the connection. This message
 
 ```jsonc
 {
-  "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response",
+  "@type": "https://didcomm.org/connections/1.0/response",
   "@id": "12345678900987654321",
   "~thread": {
     "thid": "<@id of request message>"
@@ -386,17 +386,17 @@ The connection response message is used to complete the connection. This message
 }
 ```
 
-The above message is required to be signed as described in HIPE ???. The `connection` attribute above will be base64URL encoded and included as part of the `sig_data` attribute of the signed field. The result looks like this:
+The above message is required to be signed as described in [RFC 0234 Signature Decorator](../../features/0234-signature-decorator/README.md). The `connection` attribute above will be base64URL encoded and included as part of the `sig_data` attribute of the signed field. The result looks like this:
 
 ```json
 {
-  "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/response",
+  "@type": "https://didcomm.org/connections/1.0/response",
   "@id": "12345678900987654321",
   "~thread": {
     "thid": "<@id of request message>"
   },
   "connection~sig": {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/signature/1.0/ed25519Sha512_single",
+    "@type": "https://didcomm.org/signature/1.0/ed25519Sha512_single",
     "signature": "<digital signature function output>",
     "sig_data": "<base64URL(64bit_integer_from_unix_epoch||connection_attribute)>",
     "signers": "<signing_verkey>"

>>>>>>>> Changed protocol: features/0025-didcomm-transports, latest commit to protocol: eab90f87a2a18d7b04e1b4e20a85a7c3a297ab70

diff --git a/features/0025-didcomm-transports/README.md b/features/0025-didcomm-transports/README.md
index a06f791..b88eaad 100644
--- a/features/0025-didcomm-transports/README.md
+++ b/features/0025-didcomm-transports/README.md
@@ -53,8 +53,8 @@ Websockets are an efficient way to transmit multiple messages without the overhe
 
 XMPP is an effective transport for incoming DID-Communication messages directly to mobile agents, like smartphones.
 
-- Incoming DID-Communication messages will arrive, even if the mobile agent is behind a firewalls and network-address-translation (NAT).
-- Incoming DID-Communication messages continue to arrive, even when the IP adress of the mobile agent changes (switching between, 3G, 4G, Wifi, roaming, ...).
+- Incoming DID-Communication messages will arrive, even if the mobile agent is behind a firewall and network-address-translation (NAT).
+- Incoming DID-Communication messages continue to arrive, even when the IP address of the mobile agent changes (switching between, 3G, 4G, Wifi, roaming, ...).
 - Independent of cloud agents and routing agents, as messages arrive directly at the mobile agent.
 - Well suited for direct consumer-to-consumer SSI transactions, from one mobile agent directly to another mobile agent without any DID-Communication intermediaries.
 - Simple encapsulation of DIDcom messages, getting trust from the DIDcom Encryption Envelope.
@@ -70,7 +70,7 @@ Other transports may be used for Agent messaging. As they are developed, this RF
 
 ### Message Routing
 
-The transports described here are used between two agents. In the case of [message routing](https://github.com/hyperledger/indy-hipe/tree/master/text/0022-cross-domain-messaging), a message will travel across multiple agent connections. Each intermediate agent (see [Mediators and Relays](../../concepts/0046-mediators-and-relays/README.md)) may use a different transport. These transport details are not made known to the sender, who only knows the keys of Mediators and the first endpoint of the route.
+The transports described here are used between two agents. In the case of [message routing](../../concepts/0094-cross-domain-messaging/README.md), a message will travel across multiple agent connections. Each intermediate agent (see [Mediators and Relays](../../concepts/0046-mediators-and-relays/README.md)) may use a different transport. These transport details are not made known to the sender, who only knows the keys of Mediators and the first endpoint of the route.
 
 ### Message Context
 

>>>>>>>> Changed protocol: features/0035-report-problem, latest commit to protocol: 6509b84abaf5760a8ba1744c8078d513f28456db

diff --git a/features/0035-report-problem/README.md b/features/0035-report-problem/README.md
index 6aac9ef..5570e88 100644
--- a/features/0035-report-problem/README.md
+++ b/features/0035-report-problem/README.md
@@ -3,7 +3,7 @@
 - Authors: [Stephen Curran](swcurran@cloudcompass.ca), [Daniel Hardman](daniel.hardman@gmail.com)
 - Status: [DEMONSTRATED](/README.md#demonstrated)
 - Since: 2019-04-01
-- Status Note: Implemented in several codebases. Not yet fully harmonized. 
+- Status Note: Implemented in several codebases. Not yet fully harmonized.
 - Supersedes: [Indy HIPE PR #65]( https://github.com/hyperledger/indy-hipe/pull/65)
 - Start Date: 2018-11-26
 - Tags: [feature](/tags.md#feature), [protocol](/tags.md#protocol)
@@ -33,7 +33,7 @@ address these challenges. It makes two key contributions:
 - A [protocol](../../concepts/0003-protocols/README.md) that helps an Agent report problems with appropriate
   context. We expect this to be a subprotocol of nearly every interesting application-level
   protocol; messages from it may even be [adopted into other protocols](
-  ../../concepts/0003-protocols/template.md#adopted-messages).
+  ../../0000-template-protocol.md#adopted-messages).
 - An inventory of problem categories and best practices for handling them.
 
 ## Tutorial
@@ -105,19 +105,19 @@ All of the following challenges need to be addressed.
   process payment reset the interaction to the very beginning of the protocol, or
   just back to the previous step, where payment was requested? This requires problems
   to be [matched in a formal way to the state machine](
-   ../../concepts/0003-protocols/state-details.md#state-machines) of a protocol underway.
+   ../../concepts/0003-protocols/README.md#state-machines) of a protocol underway.
 
 ### The `report-problem` protocol
 
 Reporting problems uses a simple one-step [notification protocol](
 ../../concepts/0003-protocols/README.md#types-of-protocols). Its official [PIURI](
-../../concepts/0003-protocols/uris.md#piuri) is:
+../../concepts/0003-protocols/README.md#piuri) is:
 
-    did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/report-problem/1.0
+    https://didcomm.org/report-problem/1.0
 
 The protocol includes the standard `notifier` and `notified` roles. It
 defines a single message type `problem-report`, introduced here.
-It also [adopts](../../concepts/0003-protocols/template.md#adopted-messages) the
+It also [adopts](../../0000-template-protocol.md#adopted-messages) the
 `ack` message from the [`ACK 1.0` protocol](../0015-acks/README.md),
 to accommodate the possibility that the [`~please_ack`](../0317-please-ack/README.md)
 [decorator]( ../../concepts/0011-decorators/README.md) may be used on the
@@ -139,7 +139,7 @@ of the following:
 
 ```jsonc
 {
-  "@type"            : "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/report-problem/1.0/problem-report",
+  "@type"            : "https://didcomm.org/report-problem/1.0/problem-report",
   "@id"              : "an identifier that can be used to discuss this error message",
   "~thread"          : "info about the threading context in which the error occurred (if any)",
   "description"      : { "en": "localized message", "code": "symbolic-name-for-error" },
@@ -215,13 +215,13 @@ Each item in the list must be a tagged pair (a JSON {key:value}, where the key n
 
 ``` jsonc
 {
-  "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/notification/1.0/problem-report",
+  "@type": "https://didcomm.org/notification/1.0/problem-report",
   "@id": "7c9de639-c51c-4d60-ab95-103fa613c805",
   "~thread": {
     "pthid": "1e513ad4-48c9-444e-9e7e-5b8b45c5e325",
     "sender_order": 1
   },
-  "~l10n"            : {"catalog": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/error-codes"},
+  "~l10n"            : {"catalog": "https://didcomm.org/error-codes"},
   "description"      : "Unable to find a route to the specified recipient.",
   "description~l10n" : {"code": "cant-find-route" },
   "problem_items"    : [
@@ -363,5 +363,6 @@ The following lists the implementations (if any) of this RFC. Please do a pull r
 
 Name / Link | Implementation Notes
 --- | ---
-[RFC 0036: Issue Credential Protocol](../0036-issue-credential/README.md) | The `problem-report` message is [adopted](../../concepts/0003-protocols/template.md#adopted-messages) by this protocol.
-[RFC 0037: Present Proof Protocol](../0037-present-proof/README.md) | The `problem-report` message is [adopted](../../concepts/0003-protocols/template.md#adopted-messages) by this protocol.
+[RFC 0036: Issue Credential Protocol](../0036-issue-credential/README.md) | The `problem-report` message is [adopted](../../0000-template-protocol.md#adopted-messages) by this protocol.
+[RFC 0037: Present Proof Protocol](../0037-present-proof/README.md) | The `problem-report` message is [adopted](../../0000-template-protocol.md#adopted-messages) by this protocol.
+[Streetcred.id](https://streetcred.id/) | Commercial mobile and web app built using Aries Framework - .NET

>>>>>>>> Changed protocol: features/0036-issue-credential, latest commit to protocol: 6509b84abaf5760a8ba1744c8078d513f28456db

diff --git a/features/0036-issue-credential/README.md b/features/0036-issue-credential/README.md
index 263cb25..31a28de 100644
--- a/features/0036-issue-credential/README.md
+++ b/features/0036-issue-credential/README.md
@@ -8,6 +8,15 @@
 - Start Date: 2019-01-30
 - Tags: [feature](/tags.md#feature), [decorator](/tags.md#decorator), [protocol](/tags.md#protocol), [credentials](/tags.md#credentials), [test-anomaly](/tags.md#test-anomaly)
 
+## Version Change Log
+
+### 1.1/propose-credential
+
+In version 1.1 of the propose-credential message, the following optional fields were added:
+schema_name, schema_version, and issuer_did.
+
+The previous version is [1.0/propose-credential](https://github.com/hyperledger/aries-rfcs/blob/527849e/features/0036-issue-credential/README.md#propose-credential).
+
 ## Summary
 
 Formalizes messages used to issue a credential--whether the credential is JWT-oriented, JSON-LD-oriented, or ZKP-oriented. The general flow is similar, and this protocol intends to handle all of them. If you are using a credential type that doesn't fit this protocol, please [raise a Github issue](/github-issues.md).
@@ -26,9 +35,25 @@ There are two roles in this protocol: Issuer and Holder. Technically, the latter
 
 ### States
 
-The choreography diagrams shown below detail how state evolves in this protocol, in a "happy path."
+The choreography diagrams shown below detail how state evolves in this protocol, in a "happy path." The states include:
+
+#### states for Issuer
 
-Errors might occur in various places. For example, an Issuer might offer a credential for a price that the Holder is unwilling to pay. All errors are modeled with a `problem-report` message. Easy-to-anticipate errors reset the flow as shown in the diagrams, and use the code `issuance-abandoned`; more exotic errors (e.g., server crashed at Issuer headquarters in the middle of a workflow) may have different codes but still cause the flow to be abandoned in the same way.
+* proposal-received
+* offer-sent
+* request-received
+* credential-issued
+* done
+
+#### states for Holder
+
+* proposal-sent
+* offer-received
+* request-sent
+* credential-received
+* done
+
+Errors might occur in various places. For example, an Issuer might offer a credential for a price that the Holder is unwilling to pay. All errors are modeled with a `problem-report` message. Easy-to-anticipate errors reset the flow as shown in the diagrams, and use the code `issuance-abandoned`; more exotic errors (e.g., server crashed at Issuer headquarters in the middle of a workflow) may have different codes but still cause the flow to be abandoned in the same way. That is, in this version of the protocol, all errors cause the state of both parties (the sender and the receiver of the `problem-report`) to revert to `null` (meaning it is no longer engaged in the protocol at all). Future versions of the protocol may allow more granular choices (e.g., requesting and receiving a (re-)send of the `issue-credential` message if the Holder times out while waiting in the `request-sent` state).
 
 ### Messages
 
@@ -48,7 +73,7 @@ In addition, the [`ack`](../0015-acks/README.md) and [`problem-report`](../0035-
 <blockquote>
 Note: This diagram was made in draw.io. To make changes:
 
-- upload the drawing HTML from this folder to the [draw.io](https://draw.io) site (Import From...GitHub), 
+- upload the drawing HTML from this folder to the [draw.io](https://draw.io) site (Import From...GitHub),
 - make changes,
 - export the picture and HTML to your local copy of this repo, and
 - submit a pull request.
@@ -69,17 +94,21 @@ The offer and proposal messages are part of an optional negotiation phase and ma
 An optional message sent by the potential Holder to the Issuer to initiate the protocol or in response to a `offer-credential` message when the Holder wants some adjustments made to the credential data offered by Issuer.
 
 >Note: In Hyperledger Indy, where the `request-credential` message can **only** be sent in response to an `offer-credential` message, the `propose-credential` message is the only way for a potential Holder to initiate the workflow.
- 
+
  Schema:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/propose-credential",
+    "@type": "https://didcomm.org/issue-credential/1.1/propose-credential",
     "@id": "<uuid-of-propose-message>",
     "comment": "some comment",
     "credential_proposal": <json-ld object>,
+    "schema_issuer_did": "DID of the proposed schema issuer",
     "schema_id": "Schema ID string",
+    "schema_name": "Schema name string",
+    "schema_version": "Schema version string",
     "cred_def_id": "Credential Definition ID string"
+    "issuer_did": "DID of the proposed issuer"
 }
 ```
 
@@ -87,8 +116,12 @@ Description of attributes:
 
 * `comment` -- an optional field that provides human readable information about this Credential Proposal, so the proposal can be evaluated by human judgment. Follows [DIDComm conventions for l10n](../0043-l10n/README.md).
 * `credential_proposal` -- an optional JSON-LD object that represents the credential data that Prover wants to receive. It matches the schema of [Credential Preview](#preview-credential).
+* `schema_issuer_did` -- optional filter to request credential based on a particular Schema issuer DID.
 * `schema_id` -- optional filter to request credential based on a particular Schema. This might be helpful when requesting a version 1 passport instead of a version 2 passport, for example.
+* `schema_name` -- optional filter to request credential based on a schema name. This is useful to allow a more user-friendly experience of requesting a credential by schema name.
+* `schema_version` -- optional filter to request credential based on a schema version. This is useful to allow a more user-friendly experience of requesting a credential by schema name and version.
 * `cred_def_id` -- optional filter to request credential based on a particular Credential Definition. This might be helpful when requesting a commercial driver's license instead of an ordinary driver's license, for example.
+* `issuer_did` -- optional filter to request a credential issued by the owner of a particular DID.
 
 #### Offer Credential
 
@@ -98,7 +131,7 @@ Schema:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential",
+    "@type": "https://didcomm.org/issue-credential/1.0/offer-credential",
     "@id": "<uuid-of-offer-message>",
     "comment": "some comment",
     "credential_preview": <json-ld object>,
@@ -133,7 +166,7 @@ Schema:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/request-credential",
+    "@type": "https://didcomm.org/issue-credential/1.0/request-credential",
     "@id": "<uuid-of-request-message>",
     "comment": "some comment",
     "requests~attach": [
@@ -164,7 +197,7 @@ Schema:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/issue-credential",
+    "@type": "https://didcomm.org/issue-credential/1.0/issue-credential",
     "@id": "<uuid-of-issue-message>",
     "comment": "some comment",
     "credentials~attach": [
@@ -184,7 +217,7 @@ Description of fields:
 * `comment` -- an optional field that provides human readable information about the issued credential, so it can be evaluated by human judgment. Follows [DIDComm conventions for l10n](../0043-l10n/README.md).
 * `credentials~attach` -- an array of attachments containing the issued credentials.
   * For Indy, the attachment contains data from libindy about credential to be issued, base64-encoded, as returned from `libindy`. For more information see the [Libindy API](https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L338).
-  
+
 If the issuer wants an acknowledgement that the issued credential was accepted, this message must be decorated with `~please-ack`, and it is then best practice for the new Holder to respond with an explicit `ack` message as described in [0317: Please ACK Decorator](../0317-please-ack/README.md).
 
 ##### Encoding Claims for Indy-based Verifiable Credentials
@@ -211,7 +244,7 @@ This is not a message but an inner object for other messages in this protocol. I
 
 ```jsonc
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview",
+    "@type": "https://didcomm.org/issue-credential/1.0/credential-preview",
     "attributes": [
         {
             "name": "<attribute name>",
@@ -299,4 +332,4 @@ The following lists the implementations (if any) of this RFC. Please do a pull r
 
 Name / Link | Implementation Notes
 --- | ---
- |  |
\ No newline at end of file
+[Streetcred.id](https://streetcred.id/) | Commercial mobile and web app built using Aries Framework - .NET [MISSING test results](/tags.md#test-anomaly)
diff --git a/features/0036-issue-credential/credential-issuance.html b/features/0036-issue-credential/credential-issuance.html
index 4698604..299ff42 100644
--- a/features/0036-issue-credential/credential-issuance.html
+++ b/features/0036-issue-credential/credential-issuance.html
@@ -2,10 +2,11 @@
 <!DOCTYPE html>
 <html>
 <head>
-<title>credential-issuance-offer</title>
+<title>Issue Credential</title>
 <meta charset="utf-8"/>
 </head>
-<body><div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;page&quot;:0,&quot;toolbar&quot;:&quot;pages zoom layers lightbox&quot;,&quot;edit&quot;:&quot;_blank&quot;,&quot;xml&quot;:&quot;&lt;mxfile modified=\&quot;2019-08-15T20:40:12.744Z\&quot; host=\&quot;www.draw.io\&quot; agent=\&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36\&quot; etag=\&quot;fsWI_MZvPLKNkEtpcVi9\&quot; version=\&quot;11.1.4\&quot; type=\&quot;google\&quot;&gt;&lt;diagram id=\&quot;X9jMWHkP6BGY7eYJ5WUf\&quot; name=\&quot;Page-1\&quot;&gt;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&lt;/diagram&gt;&lt;diagram id=\&quot;XLVOtJ4BhnOi6G06GR5s\&quot; name=\&quot;Page-2\&quot;&gt;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&lt;/diagram&gt;&lt;diagram id=\&quot;NXO4S1UIjlj9yYPYHUiR\&quot; name=\&quot;Page-3\&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>
+<body>
+<div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;xml&quot;:&quot;&lt;mxfile modified=\&quot;2020-03-03T13:36:46.423Z\&quot; host=\&quot;www.draw.io\&quot; agent=\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0\&quot; etag=\&quot;0ScLvUTYC-m86QdSJhvB\&quot; version=\&quot;12.7.9\&quot; type=\&quot;device\&quot;&gt;&lt;diagram id=\&quot;X9jMWHkP6BGY7eYJ5WUf\&quot; name=\&quot;Issue Credential\&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;&quot;,&quot;toolbar&quot;:&quot;pages zoom layers lightbox&quot;,&quot;page&quot;:0}"></div>
 <script type="text/javascript" src="https://www.draw.io/js/viewer.min.js"></script>
 </body>
-</html>
\ No newline at end of file
+</html>
diff --git a/features/0036-issue-credential/credential-issuance.png b/features/0036-issue-credential/credential-issuance.png
index 1219d3b..5bad736 100644
Binary files a/features/0036-issue-credential/credential-issuance.png and b/features/0036-issue-credential/credential-issuance.png differ

>>>>>>>> Changed protocol: features/0037-present-proof, latest commit to protocol: 6509b84abaf5760a8ba1744c8078d513f28456db

diff --git a/features/0037-present-proof/README.md b/features/0037-present-proof/README.md
index 8615d0c..9e24770 100644
--- a/features/0037-present-proof/README.md
+++ b/features/0037-present-proof/README.md
@@ -3,7 +3,7 @@
 - Authors: Nikita Khateev
 - Status: [ACCEPTED](/README.md#accepted)
 - Since: 2019-05-28
-- Status Note:  See [RFC 0036](../0036-issue-credential/README.md) for the issue credential part of the same Indy HIPE PR.
+- Status Note:  This v1.x version of the protocol will be replaced by version v2 defined in [RFC 454](../0454-present-proof-v2/README.md).
 - Supersedes: [Indy HIPE PR #89](https://github.com/hyperledger/indy-hipe/blob/2e85595e9a948a2fbfd58400191d112caff5a14b/text/credential-exchange-message-family/README.md); also [Credential Exchange 0.1 -- IIW 2019](https://hackmd.io/@QNKW9ANJRy6t81D7IfgiZQ/HkklVzww4?type=view)
 - Start Date: 2019-01-30
 - Tags: [feature](/tags.md#feature), [protocol](/tags.md#protocol), [credentials](/tags.md#credentials), [test-anomaly](/tags.md#test-anomaly)
@@ -30,11 +30,37 @@ This protocol is about the messages to support the presentation of verifiable cl
 
 Diagrams in this protocol were made in draw.io. To make changes:
 
-- upload the drawing HTML from this folder to the [draw.io](https://draw.io) site (Import From...GitHub), 
+- upload the drawing HTML from this folder to the [draw.io](https://draw.io) site (Import From...GitHub),
 - make changes,
 - export the picture and HTML to your local copy of this repo, and
 - submit a pull request.
 
+### States
+
+#### states for Verifier
+
+* request-sent
+* proposal-received
+* request-received
+* presentation-received
+* done
+
+#### states for Prover
+
+* request-received
+* proposal-sent
+* presentation-sent
+* reject-sent
+* done
+
+For the most part, these states map onto the transitions shown in the choreography diagram in obvious ways. However, a few subtleties are worth highlighting:
+
+* The final transitions for the Verifier (Send Presentation Reject, Send Presentation Ack, and Receive Presentation Reject) all result in a final `done` state, but this `done` may or may not be the Verifier's intended outcome. We may want to tweak this in a future version of the protocol.
+* A similar situation exists with the final transitions for the Prover and its final transitions (Send Presentation Reject, Receive Presentation Ack, and Receive Presentation Reject).
+* When a Prover makes a (counter-)proposal, it transitions to the `proposal-sent` state. This state is only present by implication in the choreography diagram; it essentially equates to the null or begin state in that the Prover does nothing until a presentation request arrives, triggering the leftmost transition for the Prover.
+
+Errors might occur in various places. For example, a Verifier might time out waiting for the Prover to supply a presentation. Errors trigger a `problem-report`. In this version of the protocol, all errors cause the state of both parties (the sender and the receiver of the `problem-report`) to revert to `null` (meaning it is no longer engaged in the protocol at all). Future versions of the protocol may allow more granular choices.
+
 ### Choreography Diagram:
 
 ![present proof](credential-presentation.png)
@@ -45,7 +71,7 @@ An optional message sent by the Prover to the verifier to initiate a proof prese
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/propose-presentation",
+    "@type": "https://didcomm.org/present-proof/1.0/propose-presentation",
     "@id": "<uuid-propose-presentation>",
     "comment": "some comment",
     "presentation_proposal": <json-ld object>
@@ -59,11 +85,11 @@ Description of attributes:
 
 ### Request Presentation
 
-Request presentation is a message from a verifier to a prover that describes values that need to be revealed and predicates that need to be fulfilled. Schema:
+From a verifier to a prover, the `request-presentation` message describes values that need to be revealed and predicates that need to be fulfilled. Schema:
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation",
+    "@type": "https://didcomm.org/present-proof/1.0/request-presentation",
     "@id": "<uuid-request>",
     "comment": "some comment",
     "request_presentations~attach": [
@@ -90,7 +116,7 @@ This message is a response to a Presentation Request message and contains signed
 
 ```json
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation",
+    "@type": "https://didcomm.org/present-proof/1.0/presentation",
     "@id": "<uuid-presentation>",
     "comment": "some comment",
     "presentations~attach": [
@@ -135,7 +161,7 @@ This is not a message but an inner object for other messages in this protocol. I
 
 ```jsonc
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview",
+    "@type": "https://didcomm.org/present-proof/1.0/presentation-preview",
     "attributes": [
         {
             "name": "<attribute_name>",
@@ -183,7 +209,7 @@ The optional `value`, when present, holds the value of the attribute to reveal i
 * if `mime-type` is missing (null), then `value` is a string. In other words, implementations interpret it the same as any other key+value pair in JSON
 * if `mime-type` is not null, then `value` is always a base64-encoded string that represents a binary BLOB, and `mime-type` tells how to interpret the BLOB after base64-decoding.
 
-An attribute specification must specify a `value`, a `cred_def_id`, or both: 
+An attribute specification must specify a `value`, a `cred_def_id`, or both:
 
 * if `value` is present and `cred_def_id` is absent, the preview proposes a self-attested attribute;
 * if `value` and `cred_def_id` are both present, the preview proposes a verifiable claim to reveal in the presentation;
@@ -191,7 +217,7 @@ An attribute specification must specify a `value`, a `cred_def_id`, or both:
 
 ##### Referent
 
-The optional `referent` can be useful in specifying multiple-credential presentations. Its value indicates which credential 
+The optional `referent` can be useful in specifying multiple-credential presentations. Its value indicates which credential
 will supply the attribute in the presentation. Sharing a `referent` value between multiple attribute specifications indicates that the holder's same credential supplies the attribute.
 
 Any attribute specification using a `referent` must also have a `cred_def_id`; any attribute specifications sharing a common `referent` value must all have the same `cred_def_id` value (see [Credential Definition Identifier](#credential-definition-identifier) above).
@@ -200,7 +226,7 @@ For example, a holder with multiple account credentials could use a presentation
 
 ```jsonc
 {
-    "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview",
+    "@type": "https://didcomm.org/present-proof/1.0/presentation-preview",
     "attributes": [
         {
             "name": "account",
@@ -236,7 +262,7 @@ The mandatory `"cred_def_id"` key maps to the credential definition identifier o
 
 ##### Predicate
 
-The mandatory `"predicate"` key maps to the predicate operator: `"<"`, `"<="`, `">="`, `">"`. 
+The mandatory `"predicate"` key maps to the predicate operator: `"<"`, `"<="`, `">="`, `">"`.
 
 ##### Threshold Value
 
@@ -281,4 +307,4 @@ The following lists the implementations (if any) of this RFC. Please do a pull r
 
 Name / Link | Implementation Notes
 --- | ---
- |  |
+[Streetcred.id](https://streetcred.id/) | Commercial mobile and web app built using Aries Framework - .NET [MISSING test results](/tags.md#test-anomaly)
diff --git a/features/0037-present-proof/credential-presentation.html b/features/0037-present-proof/credential-presentation.html
index e05c6b5..fd67374 100644
--- a/features/0037-present-proof/credential-presentation.html
+++ b/features/0037-present-proof/credential-presentation.html
@@ -2,10 +2,11 @@
 <!DOCTYPE html>
 <html>
 <head>
-<title>Untitled Diagram</title>
+<title>Present Proof</title>
 <meta charset="utf-8"/>
 </head>
-<body><div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;page&quot;:1,&quot;toolbar&quot;:&quot;pages zoom layers lightbox&quot;,&quot;edit&quot;:&quot;_blank&quot;,&quot;xml&quot;:&quot;&lt;mxfile modified=\&quot;2019-07-31T14:42:06.982Z\&quot; host=\&quot;www.draw.io\&quot; agent=\&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36\&quot; etag=\&quot;_cOg1THQPvaMnh1mdPmZ\&quot; version=\&quot;11.0.8\&quot; type=\&quot;google\&quot;&gt;&lt;diagram id=\&quot;X9jMWHkP6BGY7eYJ5WUf\&quot; name=\&quot;Page-1\&quot;&gt;5V1bc6M4Fv41ebQLSYjLYyeZ9PTM9G5XZ7d2si9bxCY209hyA87t169kIwySDAILgzOpri4jsDBH53zn6Ny4Qjer189JsFl+JfMwvoLW/PUK3V5BCGwIr9g/a/62H3EB2A8skmieX3QYuI/ew3zQyke30TxMKxdmhMRZtKkOzsh6Hc6yyliQJOSletkTiat33QSLUBq4nwWxPPqfaJ4t81EH24cTv4bRYpnfGiLk7M+sAn51/ijpMpiTl9IQ+uUK3SSEZPtPq9ebMGbU44TZf+/uyNnilyXhOtP5gv+/5xuydb78dB/uAf53ML+Fnyf5YzwH8TZ/4i9pug2TK+jEdNbrR/ZpwT7lD5G9cdKkL9EqDtb06HqZrWI6CNhHkkTvZJ0FbMCiA2kWJFm+sNAqJir/7vxRnsMkC19LQ/lzfA7JKsySN3oJP8tpyrkqP3wpLVFxzbK8PPzKIOeLRTF3cbvvlI+C9YI+5uF+duP9kOJujnCzIM7CZB1k4TXZrudpebXoh9KDHoZ2a9hiPR1pPeV1WwYb9nH1umAyO33crNbTfLC8kmw5IioJfwSPYfyNpFEWkTU990iyjKzoBTE7cR3MfiwS9jw3JCbJ7hboafdXmuNTHC3YdzOyoaNBfjSjHEBZDV1vwiSiT84+39KHpMIdfjsMUWplcbQObwoZtw6D9Ihy2HoeJHPGbG+rR8IeYBGuw4TxoILdagVBmwcFlnCwxBJYwRK4hv8qvNB24X1p4f/59MTk2LpJwjl99ohS4xgrhK9MwnerGM65IB844WUZZeH9Jpixa18o0/RIVuQ10lUp2b0RFsqUlegYruefmLJh0hGT2Q9KHzp0F8WcgvQoh0CnStrwNcr+LH1+YNw9xfnR7WvO7LuDN36wps/1Z/mg9C12ePja7oh/r92SpWSbzMJmqKHwvgjr5kM5vIfziqqVOaC8xFa+nEkYB1n0XNXGNeD9jUT04QpuEpipmJbPsH/I/Etl3SnMU0A5n0hktz0VpIkoVwRvpcs27IJegJ9TucSmVJGFjHRVCLC+JWRDUvbRCVZMlNeP6Uap4MeHDqIiHhwdkGxA9Y4OsBs8wDPjg38B+CACBOqID0gwSAsm7IwP6vtg0fD1an+WeDmyai8H4KTLqz+Gftg/nVGYs2Gv8tZRs3bR4oaljUtRWdxms4f/Ru936Pvvs/ttQJ6x9fRzAoeTNtsBU1T6w4JOdbsJn+1YU2BDD7v5/8K0/vRwyubm3GgUN0YSR38Nfkhae7ctvwQV7YzNgPcGUNEXYcBzzmuEDDCghvaxoGTsKe4GE8AS9ZUw0REoMCXoHm7mww/nm6Fyc163DLDQYI6ZOn1bWvVbwn4OQ/gZofC+ZuN3Gg7XZElWj9v0CJ6XuCOlZ6L14l9sQW8nPuyR3NAXqC17Rh0FtUXPqDFquxK17xkLCsr0e/gXY9YL0KausOGFlkzg3tSpksJer9r0RAP8oHkfSjrZtAFeJ+eNytQdTpci3LBL1VWlXsO22dBuV9xVU64W2Pe0HSZ8n3yFn4Nou/4Vvd/+dpNs7uIJkAH7H0QDnbM9apSYOQnT6D143F3AGC5/XHo1vr7CtyplK+rkVTSfs+/r6HOZn2vlV4SgIoaa/+KrcpRSBU0Ti+6rLFhZoYJ6J3Iqdx7xaaFTnYE8PaXhqVaakjz9evsLeDsg2kP53Cj8C3Ww1ejN41buIN5+164aI8IM2juF4gcVWrcXfAMWrrpATANc7W6uOVLwifL2BdhIHnSry35Gj4OawrIKMQkiF+FxqGW9kaOIVeelBLhyFnV0Wno+PuEu5/RaKldSEW7sncXdsfG4bthLTUE4HIuLu3av4z7AF/TkBPSjKMU4FrBQ7e+SrnfPoFf5gjbr1ctxP4gLXOQ9DKZbkRwuGY1unQIbV7HHw42eC3ZUcqj2oXY5Z45a7QILdlSlAIjfNGafo6plaRpHlA4I2YVZx+CzOEjTaPZhTERdVvXbc2qd2//UyLanDDJztvGVAeq2fO649CaWj1mOJPu/ehPHm/qW7Tog/x+dKBInWIxKtpb9xg9hKnH2CL1otUJqwosGPCx40Qw50Y745ow60dQ+VGu8SnpsmwM1AYfMiXPr0mk8PIWls05HnY0Fw9ITHLymNg5C3q5fyWjrKYCg7V/7Hv7chml2iYm4eMBEXDXVNbIrPjrk1LJjo0XF04EG8bkBf+rbhz9UtZ+Es7YAFto+N2pAgfJfq7v0nB4k8++3hDxfWiWe7SkcBOpSPL8GCvL7XXQpnsY+7sOlexkpxcNtmVBgiSIvfahaPH0LIK/RO7u+b01iJIHlGR2BaiJrlLp+KIWPZYVfy32NCh8MmIoExSx91DWtF+GmmXpW3EAG+i9UoVjzIAt2/oAk2UHlncSeHRM6Pa9PLBXJacmWfV8ZnWryyhk5qvqIQ1Xj+MEUoGaFdeYi534dNuMrq9IFU920J9DBH20KS12lj6N9GZWQHSqJ9OClUlC2q+q4tDY00iZTeCyKXcGM6jSbcQVHxJYOwOuq6oW0hWIvaNhraHtVHSh01umnspXz8sXlHVeNE9DCODnqbmgdRbGmANnYCLdOYNX5NBGT242ETdT06De34XK1sAr51BR0hlPDSNjSwM5bGtEGl2cyFh4R9054ajbDQb1KckXuLhZ8aVhH5VUf67hsm4gYQ8RJaDhiDFzltGeAPtmbo9rlFRGz8W/yxAjZWTd5arNQpxCeAud9fkiSbEkWZB3EvxxGS8S1qsT9K8yyt1z1BNuMMMdwMcMfZCcywLxu4MZls1WsG9/SFqLT2hLIW+6DkzjY1aymGUl2ZcJDdnBrzfhiA4jhvRuebFqbtKsu11UMdXu48SUdwq5yxNBDZ7vKRdWZ8Ol2lfEmESNObx7W+aHbTmzI1Ckx3Uj0oGlnNEN/Ws7A4l2vuIfPGxvX/h1j3ae2NmkfNpDS0YE1BX75T1K0Z211AmTwUnXfGKastDW5PbFbwvAG/IhD3u0K2rsrB3XRgK1rxwwY8vZF73XXQA2wxJnErubG6l+cquIx7QivjV40d0wSWH+M4XQsboZ8GUTO2iCp50ivweia25+FWct3o4712k2NZrUT8MUcBNiPi9kRmu7xaLVuU9m21wPbbBdatRDJgegLKWaqxwQTvmnbsoXqNyOMDzzBNQ2EKfprCcQR8oNVZJ6Ci7VW2EjSDmwB4ViJZqmjhi1sorv2PBB7JwzemkMRRf5AiQT1EjqqRALA6+7PAFFyaGdUfS9b282+qNb9oZs6cfvo75ycUev1uazNN+oYQ5C6SJ+++TYOBgO4iTq+k2QEQQQ1CQdkVSzk80KrI6t6UhfDfrZ40luWYH13JvH6vNCy3x2bHKEYW3Om1jrSxYDHL4sVng6uJvvtD23QR231hj21HDhuNWmjqQeQj+n2yEMurMbL6W2mlu1gABzo+pbjd23YZAkIcC7/tWGkUesYjSyrXSU2FwHyvIsa7sZyGRCrtd29TBwXGqsiNIAdzoN0qUKog4sW7TzfBzHyi+NGQYKtJInN0tziDGgq8UtIBBBrclDXTADUNJGpTGC76l6zYb3b1RYyh23DkSH1ispbMI1q6sH9GpqKpAAOA04MBt9Vm8wIW6PqpJODvdF/hrCivea4cLWEjoyApWA4VZpuE0Sq2kCWoBpXkNqC9UBtFG+142JjepEj7trSFttVkxphOLokQUUPVL1a6EuBwkLWjQSkIPeInxqCqnLGhBuXZ6iO0MmvG4VNWcGpTtuy9qlDukCmynYeXfc9R8g6s8UaV+1kZ/Hdr+Mr55ZdBVrFPpeCYtBkk9DTUYzDlit0hu0PtlwNX9A4YAt2SVdquQvuDlyqF3WOrkzDtw1tecU3ftqawGWMa+X8w5vjBViXAkausfd+WVOAecPirjzTf0Rc0ZVpXNhzgBEbIWG7CBugpGG3CPWtMC1Q0g77ju7twVK0FvuC0a7/kgGhtgeLmZfmYElNxgZrSVVV0QmcthlJcwYuYVUcPmUKpNpX1lQzd+w6vmqRAiI475EidZoPVRqL9hbakhXDuCDlsAujOqxkz3D/k/EQWWdHk+4rBkcXnJesnO5FHE0z9YwnPDvy+O5LGQcfob1TL6wG7B3LRrYR7pk4YsDerk7Rnz3En2C04HWAIM/2KiA09X27i0F0FIlG/W42APjK8CJit2O7cwCtYU0WJCeifSSIKUTKTEsfX+g7ZiZkNxFmFV8+1AVx6GFCSFa+nJV0fyXzkF3xfw==&lt;/diagram&gt;&lt;diagram id=\&quot;XLVOtJ4BhnOi6G06GR5s\&quot; name=\&quot;Page-2\&quot;&gt;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&lt;/diagram&gt;&lt;diagram id=\&quot;NXO4S1UIjlj9yYPYHUiR\&quot; name=\&quot;Page-3\&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div>
+<body>
+<div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;xml&quot;:&quot;&lt;mxfile modified=\&quot;2020-03-03T13:32:37.942Z\&quot; host=\&quot;www.draw.io\&quot; agent=\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0\&quot; etag=\&quot;qV1bOY5CUeSzrsUlWOLz\&quot; version=\&quot;12.7.9\&quot; type=\&quot;device\&quot;&gt;&lt;diagram id=\&quot;XLVOtJ4BhnOi6G06GR5s\&quot; name=\&quot;Present Proof\&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;&quot;,&quot;toolbar&quot;:&quot;pages zoom layers lightbox&quot;,&quot;page&quot;:0}"></div>
 <script type="text/javascript" src="https://www.draw.io/js/viewer.min.js"></script>
 </body>
-</html>
\ No newline at end of file
+</html>
diff --git a/features/0037-present-proof/credential-presentation.png b/features/0037-present-proof/credential-presentation.png
index 6c042e9..0db00c5 100644
Binary files a/features/0037-present-proof/credential-presentation.png and b/features/0037-present-proof/credential-presentation.png differ

